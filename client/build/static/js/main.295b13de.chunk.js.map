{"version":3,"sources":["serviceWorkerRegistration.ts","utils/axios.ts","redux/hooks/index.ts","redux/actions/index.ts","hooks/useSocket.ts","hooks/useQueryParams.ts","hooks/useRole.ts","hooks/index.ts","hooks/useFormHandler.ts","hooks/useMessagesInfo.ts","utils/subscribePushNotifications.ts","redux/reducers/socket.ts","redux/reducers/loader.ts","redux/reducers/apiFeedback.ts","redux/reducers/role.ts","redux/reducers/messagesInfo.ts","redux/reducers/index.ts","redux/store.ts","utils/setLoading.ts","utils/handleApiError.ts","utils/handleApiValidation.ts","utils/setRole.ts","utils/setApiFeedback.ts","utils/detectMobileDevice.ts","utils/history.ts","utils/filesInfo.ts","utils/defaultAvatar.ts","utils/index.ts","components/Shared/Roles/Guest/helpers/checkRole.ts","components/Shared/Roles/Guest/helpers/index.ts","components/Shared/Roles/Guest/hooks/useHelpers.ts","components/Shared/Roles/Guest/hooks/index.ts","components/Shared/Roles/Guest/Guest.tsx","components/Shared/Roles/Admin/helpers/checkRole.ts","components/Shared/Roles/Admin/helpers/index.ts","components/Shared/Roles/Admin/hooks/useHelpers.ts","components/Shared/Roles/Admin/hooks/index.ts","components/Shared/Navbar/styled/Dashboard/Brand.ts","components/Shared/Navbar/styled/Dashboard/Hamburger.ts","components/Shared/Navbar/styled/Dashboard/Menu.ts","components/Shared/Navbar/styled/Dashboard/Line.ts","components/Shared/Navbar/styled/Dashboard/Links.ts","components/Shared/Navbar/styled/Dashboard/Link.ts","components/Shared/Navbar/styled/Dashboard/index.ts","components/Shared/Navbar/Navbar.tsx","components/Shared/Roles/User/helpers/socket/handleOnSendMessage.ts","components/Shared/Roles/User/helpers/checkRole.ts","components/Shared/Roles/User/helpers/getUnreadMessagesInfo.ts","components/Shared/Roles/User/helpers/logout.ts","components/Shared/Roles/User/helpers/index.ts","components/Shared/Roles/Admin/utils/links.ts","components/Shared/Roles/Admin/utils/index.ts","components/Shared/Roles/Admin/Admin.tsx","components/Shared/Roles/User/hooks/useHelpers.ts","components/Shared/Roles/User/hooks/index.ts","components/Shared/Roles/User/utils/links.ts","components/Shared/Roles/User/utils/index.ts","components/Shared/Roles/User/User.tsx","components/Shared/Loader/hooks/useLoader.ts","components/Shared/Loader/hooks/index.ts","components/Shared/styled/BlackLayer.ts","components/Shared/styled/Button.ts","components/Shared/styled/index.ts","components/Shared/Loader/styled/Dashboard/Logo.ts","components/Shared/Loader/styled/Dashboard/index.ts","assets/images/Logo.png","components/Shared/Loader/Loader.tsx","components/Admin/Analysis/Analysis.tsx","components/Guest/Home/helpers/authenticateEmail.ts","components/Guest/Home/helpers/index.ts","components/Guest/Home/hooks/useHelpers.ts","components/Guest/Home/hooks/index.ts","components/Guest/Modals/RegistrationModal/helpers/register.ts","components/Guest/Modals/RegistrationModal/helpers/validate.ts","components/Guest/Modals/RegistrationModal/helpers/index.ts","components/Guest/Modals/RegistrationModal/hooks/useForm.ts","components/Guest/Modals/RegistrationModal/hooks/index.ts","components/Shared/ApiFeedback/hooks/useApiFeedback.ts","components/Shared/ApiFeedback/hooks/index.ts","components/Shared/ApiFeedback/ApiFeedback.tsx","components/Guest/Modals/RegistrationModal/styled/Dashboard/Content.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/CloseButton.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Header.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Form.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Label.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/index.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Input.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Textarea.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Error.ts","components/Guest/Modals/RegistrationModal/styled/Dashboard/Submit.ts","components/Guest/Modals/RegistrationModal/composed/Input.tsx","components/Guest/Modals/RegistrationModal/composed/index.ts","components/Guest/Modals/RegistrationModal/RegistrationModal.tsx","components/Guest/Modals/LoginModal/helpers/index.ts","components/Guest/Modals/LoginModal/helpers/login.ts","components/Guest/Modals/LoginModal/helpers/validate.ts","components/Guest/Modals/LoginModal/hooks/index.ts","components/Guest/Modals/LoginModal/hooks/useForm.ts","components/Guest/Modals/LoginModal/LoginModal.tsx","components/Guest/Home/styled/Dashboard/index.ts","components/Guest/Home/styled/Dashboard/Header.ts","components/Guest/Home/styled/Dashboard/Logo.ts","components/Guest/Home/styled/Dashboard/HiddenButton.ts","components/Guest/Home/styled/Dashboard/Button.ts","components/Guest/Home/styled/Dashboard/Advantages.ts","components/Guest/Home/styled/Dashboard/Advantage.ts","components/Guest/Home/styled/Dashboard/Dollar.ts","components/Guest/Home/composed/HelpSidebar/helpers/index.ts","components/Guest/Home/composed/HelpSidebar/helpers/handleQueryParams.ts","components/Guest/Home/composed/HelpSidebar/helpers/handleHelpSidebar.ts","components/Guest/Home/composed/HelpSidebar/helpers/validate.ts","components/Guest/Home/composed/HelpSidebar/hooks/index.ts","components/Guest/Home/composed/HelpSidebar/hooks/useHelpSidebar.ts","components/Guest/Home/styled/HelpSidebar/index.ts","components/Guest/Home/styled/HelpSidebar/Content.ts","components/Guest/Home/styled/HelpSidebar/Issue.ts","components/Guest/Home/styled/HelpSidebar/Form.ts","components/Guest/Home/composed/HelpSidebar/utils/index.ts","components/Guest/Home/composed/HelpSidebar/utils/issues.ts","components/Guest/Home/composed/HelpSidebar/HelpSidebar.tsx","components/Guest/Home/composed/index.ts","components/Guest/Home/utils/index.ts","components/Guest/Home/utils/links.ts","components/Guest/Home/Home.tsx","components/User/Profile/helpers/index.ts","components/User/Profile/helpers/getProfile.ts","components/User/Profile/helpers/updateProfile.ts","components/User/Profile/helpers/updateCachedProfile.ts","components/User/Profile/helpers/updateCachedAvatar.ts","components/User/Profile/helpers/validateProfile.ts","components/User/Profile/helpers/changeAvatar.ts","components/User/Profile/helpers/removeAvatar.ts","components/User/Profile/hooks/index.ts","components/User/Profile/hooks/useProfile.ts","components/User/Chat/styled/Dashboard/index.ts","components/User/Chat/styled/Dashboard/Content.ts","components/User/Chat/styled/Dashboard/Messages.ts","components/User/Chat/styled/Dashboard/UnreadMessagesInfo.ts","components/User/Chat/styled/Dashboard/FileInput.ts","components/User/Chat/styled/Dashboard/Warning.ts","components/User/Chat/styled/Dashboard/Error.ts","components/User/Profile/styled/Dashboard/index.ts","components/User/Profile/styled/Dashboard/Content.ts","components/User/Profile/styled/Dashboard/AvatarContainer.ts","components/User/Profile/styled/Dashboard/Avatar.ts","components/User/Profile/styled/Dashboard/Info.ts","components/User/Profile/styled/Dashboard/Buttons.ts","components/User/Profile/styled/Dashboard/Button.ts","components/User/Profile/Profile.tsx","components/User/Chat/helpers/index.ts","components/User/Chat/helpers/socket/handleOnSendMessage.ts","components/User/Chat/helpers/getMessages.ts","components/User/Chat/helpers/getUnreadMessages.ts","components/User/Chat/helpers/sendMessage.ts","components/User/Chat/helpers/handleSubmittingTextarea.ts","components/User/Chat/helpers/sendFile.ts","components/User/Chat/helpers/pushToTheBottom.ts","components/User/Chat/hooks/index.ts","components/User/Chat/hooks/useChat.ts","components/User/Chat/styled/Textarea/index.ts","components/User/Chat/styled/Textarea/Container.ts","components/User/Chat/styled/Textarea/Content.ts","components/User/Chat/styled/Textarea/Buttons.ts","components/User/Chat/styled/Textarea/Button.ts","components/User/Chat/styled/Message/index.ts","components/User/Chat/styled/Message/AssetContainer.ts","components/User/Chat/styled/Message/Content.ts","components/User/Chat/styled/Message/Avatar.ts","components/User/Chat/styled/Message/Image.ts","components/User/Chat/styled/Message/Video.ts","components/User/Chat/styled/Message/Date.ts","components/User/Chat/composed/MessageContainer.tsx","components/User/Chat/composed/Message.tsx","components/User/Chat/styled/ProgressLoader/RingsContainer.ts","components/User/Chat/styled/ProgressLoader/index.ts","components/User/Chat/styled/ProgressLoader/Rings.ts","components/User/Chat/styled/ProgressLoader/Ring.ts","components/User/Chat/styled/ProgressLoader/Percentage.ts","components/User/Chat/composed/ProgressLoader.tsx","components/User/Chat/composed/index.ts","components/User/Chat/Chat.tsx","components/User/Analysis/helpers/index.ts","components/User/Analysis/helpers/getAnalysis.ts","components/User/Analysis/hooks/index.ts","components/User/Analysis/hooks/useAnalysis.ts","components/User/Analysis/composed/index.ts","components/User/Analysis/composed/Analysis.tsx","components/User/Analysis/Analysis.tsx","components/App.tsx","assets/styles/theme.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","timeoutId","useAppDispatch","useDispatch","useAppSelector","useSelector","actions","SET_SOCKET","SET_LOADING","SET_API_FEEDBACK","SET_ROLE","SET_LAST_UNREAD_MESSAGE_INDEX","SET_UNREAD_MESSAGES_AMOUNT","useSocket","dispatch","socket","setSocket","payload","type","clearSocket","disconnect","undefined","useQueryParams","queryString","parse","useLocation","search","useRole","role","hooks","useFormHandler","setForm","handleInputError","errorKey","form","handleInputValue","target","name","value","validateProperty","property","validated","trim","sanitize","validateEmail","email","validator","isEmail","validatePassword","password","repeatedPassword","withLogin","test","validateRepeatedPassword","useMessagesInfo","messagesInfo","lastUnreadMessageIndex","unreadMessagesAmount","setLastUnreadMessageIndex","setUnreadMessagesAmount","apiAxios","axios","create","interceptors","request","use","setTimeout","utils","setLoading","handleApiError","clearTimeout","response","setApiFeedback","data","feedback","urlBase64ToUint8Array","base64String","base64","repeat","length","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","subscribePushNotifications","url","a","permissions","handlePushNotifications","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","process","REACT_APP_PUBLIC_VAPID_KEY","subscription","post","options","query","initialState","loading","loader","apiFeedback","roleConfig","key","storage","messagesConfig","rootReducer","combineReducers","persistReducer","configureStore","reducer","store","createStore","reducers","persistor","persistStore","status","apiError","setRole","history","push","handleApiValidation","errors","results","map","parameter","detectMobileDevice","document","documentElement","createBrowserHistory","filesInfo","regex","images","videos","files","sizes","imageMaxSize","maxVideoSize","maxFileSize","defaultAvatar","charAt","checkRole","guestHelpers","useHelpers","useEffect","guestHooks","GuestContainer","styled","section","Guest","children","adminHelpers","io","adminHooks","h1","theme","firstBreakpoint","secondBreakpoint","thirdBreakpoint","fourthBreakpoint","div","withHamburger","css","ul","primaryColor","hamburger","li","active","counter","Dashboard","Brand","Hamburger","Menu","Line","Links","Link","NavbarContainer","nav","additionalBreakpoint","Navbar","links","useState","toggleHamburger","setToggleHamburger","onClick","link","pathname","handleOnSendMessage","message","chat","currentUser","user","id","getUnreadMessagesInfo","setCurrentUser","get","logout","sessionStorage","clear","userHelpers","adminUtils","AdminContainer","Admin","on","off","userHooks","userUtils","UserContainer","User","useLoader","loaderHooks","showLayer","button","sharedStyled","BlackLayer","Button","rotate","keyframes","img","$loading","Logo","LoaderContainer","Loader","src","AnalysisContainer","Analysis","authenticateEmail","emailToken","setShowLoginModal","homeHelpers","handleToggler","dispatcher","homeHooks","event","formHandler","preventDefault","registerModalHelpers","validate","nameError","emailError","passwordError","repeatedPasswordError","registrationModalHelpers","useForm","registrationModalHooks","useApiFeedback","apiFeedbackHooks","ApiFeedbackContainer","ApiFeedback","as","dialog","showModal","h2","scaleOut","label","Content","CloseButton","Header","Form","Label","Input","input","Textarea","textarea","Error","p","Submit","scaleIn","InputContainer","Composed","placeholder","onChange","htmlFor","RegistrationModalContainer","RegistrationModal","toggleModal","formCompleted","onSubmit","noValidate","loginModalHelpers","login","loginModalHooks","LoginModalContainer","LoginModal","mobile","HiddenButton","$fill","Advantages","Advantage","Dollar","helpSidebarHelpers","handleQueryParams","params","setIssue","toggleSidebar","showLoginModal","failedAuthentication","passwordToken","handleHelpSidebar","issue","hideSidebar","helpSidebarHooks","useHelpSidebar","StyledHelpSidebar","aside","showSidebar","Issue","helpSidebarUtils","issues","handleOnClick","HelpSidebarContainer","HelpSidebar","homeUtils","setShowHelpSidebar","HomeContainer","Home","showHelpSidebar","showRegistrationModal","setShowRegistrationModal","alt","onDoubleClick","profileHelpers","getProfile","setProfile","setAvatar","loadCachedProfile","profile","JSON","getItem","story","avatar","setItem","stringify","updateProfile","profileHandler","withDefaultAvatar","validateProfile","updatedAvatar","updatedProfile","updateCachedProfile","updateCachedAvatar","storyError","changeAvatar","setShowAvatarInput","file","currentTarget","size","isImage","resetFileInput","FormData","append","removeAvatar","profileHooks","useProfile","includes","withAnalysis","Messages","UnreadMessagesInfo","FileInput","attrs","Warning","AvatarContainer","Avatar","Info","Buttons","ProfileContainer","Profile","showAvatarInput","chatHelpers","messagesRef","setMessages","messages","pushToTheBottom","emit","getMessages","limit","offset","hasMoreMessages","setHasMoreMessages","setIsLoading","loadCachedMessage","savedMessages","scrollTop","lastScroll","scrollHeight","_messages","getUnreadMessages","current","sendMessage","setMessage","lastMessage","_message","content","createdAt","Date","handleSubmittingTextarea","shiftKey","sendFile","setShowFileInput","setUploadPercentage","percentage","isVideo","isFile","largeSizeError","intervalId","setInterval","clearInterval","filename","ref","withoutDelay","chatHooks","useChat","useRef","isLoading","StyledTextarea","Container","StyledMessage","AssetContainer","withCurrentUser","withLastUserMessage","withFile","withError","Image","Video","video","showDetails","MessageContainer","nextMessage","showAvatar","Message","showError","withLastAndNextMessage","views","setShowDetails","imageError","setImageError","videoError","setVideoError","handleFileLoadingError","date","onError","controls","fileSaver","saveAs","toDateString","toLocaleTimeString","toLocaleString","dimension","StyledProgressLoader","Rings","svg","RingsContainer","Ring","circle","Percentage","ProgressLoaderContainer","ProgressLoader","circumference","r","baseVal","Math","PI","style","strokeDasharray","strokeDashoffset","toString","cx","cy","radius","strokeOpacity","toFixed","ChatContainer","Chat","textareaRef","showFileInput","uploadPercentage","areThereMessages","areThereUnreadMessages","fileUploadInProgress","onTouchStart","blur","onScroll","index","disabled","e","onKeyPress","focus","analysisHelpers","getAnalysis","analysisRef","setAnalysis","hasMoreAnalysis","setHasMoreAnalysis","loadCachedAnalysis","savedAnalysis","analysis","_analysis","analysisHooks","useAnalysis","nextAnalysis","areThereAnalysis","currentAnalysis","AppContainer","main","App","routes","render","to","path","exact","ReactDOM","StrictMode","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","indexOf","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.295b13de.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        window.location.hostname === '[::1]' ||\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            return\n        }\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl, config)\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    )\n                })\n            } else {\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            )\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            console.log('Content is cached for offline use.')\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import axios from 'axios'\n\nimport utils from 'utils'\n\nconst apiAxios = axios.create()\n\nlet timeoutId: any\n\napiAxios.interceptors.request.use(\n    request => {\n        !timeoutId && (timeoutId = setTimeout(() => utils.setLoading(true), 500))\n        return request\n    },\n    error => {\n        utils.setLoading(false)\n        utils.handleApiError(error)\n        clearTimeout(timeoutId)\n        timeoutId = undefined\n        throw error\n    }\n)\n\napiAxios.interceptors.response.use(\n    response => {\n        utils.setLoading(false)\n        utils.setApiFeedback(response.data.feedback)\n        clearTimeout(timeoutId)\n        timeoutId = undefined\n        return response\n    },\n    error => {\n        utils.setLoading(false)\n        utils.handleApiError(error)\n        clearTimeout(timeoutId)\n        timeoutId = undefined\n        throw error\n    }\n)\n\nexport default apiAxios\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nimport { AppDispatch, RootState } from 'redux/reducers'\n\nconst useAppDispatch = () => useDispatch<AppDispatch>()\nconst useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport { useAppDispatch, useAppSelector }\n","const SET_SOCKET = 'SET_SOCKET'\nconst SET_LOADING = 'SET_LOADING'\nconst SET_API_FEEDBACK = 'SET_API_FEEDBACK'\nconst SET_ROLE = 'SET_ROLE'\nconst SET_LAST_UNREAD_MESSAGE_INDEX = 'SET_LAST_UNREAD_MESSAGE_INDEX'\nconst SET_UNREAD_MESSAGES_AMOUNT = 'SET_UNREAD_MESSAGES_AMOUNT'\n\nconst actions = {\n    SET_SOCKET,\n    SET_LOADING,\n    SET_API_FEEDBACK,\n    SET_ROLE,\n    SET_LAST_UNREAD_MESSAGE_INDEX,\n    SET_UNREAD_MESSAGES_AMOUNT\n}\n\nexport default actions\n","import { Socket } from 'socket.io-client'\n\nimport { useAppDispatch, useAppSelector } from 'redux/hooks'\n\nimport actions from 'redux/actions'\n\nconst useSocket = () => {\n    const dispatch = useAppDispatch()\n    const { socket } = useAppSelector(state => state.socket)\n    const setSocket = (payload: Socket | undefined) =>\n        dispatch({\n            type: actions.SET_SOCKET,\n            payload\n        })\n    const clearSocket = () => {\n        if (socket) {\n            socket.disconnect()\n            setSocket(undefined)\n        }\n    }\n    return {\n        socket,\n        setSocket,\n        clearSocket\n    }\n}\n\nexport default useSocket\n","import { useLocation } from 'react-router'\nimport queryString from 'query-string'\n\nconst useQueryParams = () => queryString.parse(useLocation().search)\n\nexport default useQueryParams\n","import { useAppSelector } from 'redux/hooks'\n\nconst useRole = () => {\n    const { role } = useAppSelector(state => state.role)\n    return {\n        role\n    }\n}\n\nexport default useRole\n","import useSocket from './useSocket'\nimport useQueryParams from './useQueryParams'\nimport useRole from './useRole'\nimport useFormHandler from './useFormHandler'\nimport useMessagesInfo from './useMessagesInfo'\n\nconst hooks = {\n    useSocket,\n    useQueryParams,\n    useRole,\n    useFormHandler,\n    useMessagesInfo\n}\n\nexport default hooks\n","import React from 'react'\nimport validator from 'validator'\nimport sanitize from 'sanitize-html'\n\ntype InputValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => void\n\ntype InputErrorHandler = (errorKey: string, error: string) => void\n\ntype PropertyValidator = (property: string, value: string) => boolean\n\ntype EmailValidator = (email: string) => boolean\n\ntype PasswordValidator = (password: string, repeatedPassword: string, withLogin: boolean) => boolean\n\ntype RepeatedPasswordValidator = (repeatedPassword: string, password: string) => boolean\n\ntype FormHandler = <T>(setForm: React.Dispatch<React.SetStateAction<T>>) => {\n    handleInputValue: InputValueHandler\n    handleInputError: InputErrorHandler\n    validateProperty: PropertyValidator\n    validateEmail: EmailValidator\n    validatePassword: PasswordValidator\n    validateRepeatedPassword: RepeatedPasswordValidator\n}\n\nconst useFormHandler: FormHandler = setForm => {\n    const handleInputValue: InputValueHandler = ({ target: { name, value } }) =>\n        setForm(form => ({ ...form, [name]: value }))\n    const handleInputError: InputErrorHandler = (errorKey, error) =>\n        setForm(form => ({ ...form, [`${errorKey}Error`]: error }))\n    const validateProperty: PropertyValidator = (property, value) => {\n        let validated = true\n        switch (true) {\n            case !value.trim():\n                validated = false\n                handleInputError(property, 'This fields cannot be empty')\n                break\n            case value !== sanitize(value):\n                validated = false\n                handleInputError(property, 'This field contains incorrect characters')\n                break\n            default:\n                handleInputError(property, '')\n        }\n        return validated\n    }\n    const validateEmail: EmailValidator = email => {\n        let validated = true\n        switch (true) {\n            case !email.trim():\n                validated = false\n                handleInputError('email', 'Type your email address')\n                break\n            case !validator.isEmail(email):\n                validated = false\n                handleInputError('email', 'Type proper email address')\n                break\n            default:\n                handleInputError('email', '')\n        }\n        return validated\n    }\n    const validatePassword: PasswordValidator = (password, repeatedPassword, withLogin) => {\n        let validated = true\n        if (!withLogin) {\n            switch (true) {\n                case !password:\n                    validated = false\n                    handleInputError('password', 'Type your password')\n                    break\n                case !/(?=.{8,})/.test(password):\n                    validated = false\n                    handleInputError('password', 'Password must be at least 8 characters long')\n                    break\n                case !/(?=.*[a-z])/.test(password):\n                    validated = false\n                    handleInputError('password', 'Password must contain at least one small letter')\n                    break\n                case !/(?=.*[A-Z])/.test(password):\n                    validated = false\n                    handleInputError('password', 'Password must contain at least one big letter')\n                    break\n                case !/(?=.*[0-9])/.test(password):\n                    validated = false\n                    handleInputError('password', 'Password must contain at least one digit')\n                    break\n                default:\n                    handleInputError('password', '')\n            }\n            switch (true) {\n                case repeatedPassword && password !== repeatedPassword:\n                    validated = false\n                    handleInputError('repeatedPassword', 'Passwords are different')\n                    break\n                default:\n                    handleInputError('repeatedPassword', '')\n            }\n        } else {\n            switch (true) {\n                case !password:\n                    validated = false\n                    handleInputError('password', 'Type your password')\n                    break\n                default:\n                    handleInputError('password', '')\n            }\n        }\n        return validated\n    }\n    const validateRepeatedPassword: RepeatedPasswordValidator = (repeatedPassword, password) => {\n        let validated = true\n        switch (true) {\n            case !repeatedPassword:\n                validated = false\n                handleInputError('repeatedPassword', 'Type password twice')\n                break\n            case repeatedPassword !== password:\n                validated = false\n                handleInputError('repeatedPassword', 'Passwords are different')\n                break\n            default:\n                handleInputError('repeatedPassword', '')\n        }\n        return validated\n    }\n    return {\n        handleInputValue,\n        handleInputError,\n        validateProperty,\n        validateEmail,\n        validatePassword,\n        validateRepeatedPassword\n    }\n}\n\nexport default useFormHandler\n","import { useAppDispatch, useAppSelector } from 'redux/hooks'\n\nimport actions from 'redux/actions'\n\nconst useMessagesInfo = () => {\n    const dispatch = useAppDispatch()\n    const { lastUnreadMessageIndex, unreadMessagesAmount } = useAppSelector(\n        state => state.messagesInfo\n    )\n    const setLastUnreadMessageIndex = (payload: number) =>\n        dispatch({ type: actions.SET_LAST_UNREAD_MESSAGE_INDEX, payload })\n    const setUnreadMessagesAmount = (payload: number) =>\n        dispatch({ type: actions.SET_UNREAD_MESSAGES_AMOUNT, payload })\n    return {\n        lastUnreadMessageIndex,\n        unreadMessagesAmount,\n        setLastUnreadMessageIndex,\n        setUnreadMessagesAmount\n    }\n}\n\nexport default useMessagesInfo\n","import axios from 'axios'\n\nconst urlBase64ToUint8Array = (base64String: string) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/')\n    const rawData = window.atob(base64)\n    const outputArray = new Uint8Array(rawData.length)\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i)\n    }\n    return outputArray\n}\n\nconst subscribePushNotifications = async (url: string) => {\n    try {\n        const { permissions, serviceWorker } = navigator\n        const handlePushNotifications = async () => {\n            if (serviceWorker) {\n                const { pushManager } = await serviceWorker.ready\n                if (pushManager) {\n                    const subscription = await pushManager.subscribe({\n                        userVisibleOnly: true,\n                        applicationServerKey: urlBase64ToUint8Array(\n                            process.env.REACT_APP_PUBLIC_VAPID_KEY!\n                        )\n                    })\n                    await axios.post(url, subscription)\n                }\n            }\n        }\n        if (permissions) {\n            const options = {\n                name: 'push',\n                userVisibleOnly: true\n            }\n            const { state } = await permissions.query(options as any)\n            switch (state) {\n                case 'granted':\n                    handlePushNotifications()\n                    break\n                case 'prompt':\n                    handlePushNotifications()\n                    break\n            }\n        } else {\n            handlePushNotifications()\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport default subscribePushNotifications\n","import { Socket } from 'socket.io-client'\n\nimport actions from 'redux/actions'\n\ntype State = {\n    socket: Socket | undefined\n}\n\nconst initialState: State = {\n    socket: undefined\n}\n\ntype Action = {\n    payload: Socket\n    type: 'SET_SOCKET'\n}\n\nconst socket = (state = initialState, { payload, type }: Action) => {\n    switch (type) {\n        case actions.SET_SOCKET:\n            return {\n                ...state,\n                socket: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default socket\n","import actions from 'redux/actions'\n\nconst initialState = {\n    loading: false\n}\n\ntype Action = {\n    payload: boolean\n    type: 'SET_LOADING'\n}\n\nconst loader = (state = initialState, { payload, type }: Action) => {\n    switch (type) {\n        case actions.SET_LOADING:\n            return {\n                ...state,\n                loading: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default loader\n","import actions from 'redux/actions'\n\nconst initialState = {\n    apiFeedback: ''\n}\n\ntype Action = {\n    payload: string\n    type: 'SET_API_FEEDBACK'\n}\n\nconst apiFeedback = (state = initialState, { payload, type }: Action) => {\n    switch (type) {\n        case actions.SET_API_FEEDBACK:\n            return {\n                ...state,\n                apiFeedback: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default apiFeedback\n","import actions from 'redux/actions'\n\ntype State = {\n    role: Role\n}\n\nconst initialState: State = {\n    role: 'guest'\n}\n\ntype Action = {\n    payload: Role\n    type: 'SET_ROLE'\n}\n\nconst role = (state = initialState, { payload, type }: Action) => {\n    switch (type) {\n        case actions.SET_ROLE:\n            return {\n                ...state,\n                role: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default role\n","import actions from 'redux/actions'\n\ntype State = {\n    lastUnreadMessageIndex: number | undefined\n    unreadMessagesAmount: number\n}\n\nconst initialState: State = {\n    lastUnreadMessageIndex: undefined,\n    unreadMessagesAmount: 0\n}\n\ntype LastUnreadMessageIndexAction = {\n    payload: number\n    type: 'SET_LAST_UNREAD_MESSAGE_INDEX'\n}\n\ntype UnreadMessagesAmountAction = {\n    payload: number\n    type: 'SET_UNREAD_MESSAGES_AMOUNT'\n}\n\ntype Action = LastUnreadMessageIndexAction | UnreadMessagesAmountAction\n\nconst messagesInfo = (state = initialState, { payload, type }: Action) => {\n    switch (type) {\n        case actions.SET_LAST_UNREAD_MESSAGE_INDEX:\n            return {\n                ...state,\n                lastUnreadMessageIndex: payload\n            }\n        case actions.SET_UNREAD_MESSAGES_AMOUNT:\n            return {\n                ...state,\n                unreadMessagesAmount: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default messagesInfo\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport socket from './socket'\nimport loader from './loader'\nimport apiFeedback from './apiFeedback'\nimport role from './role'\nimport messagesInfo from './messagesInfo'\n\nconst roleConfig = {\n    key: 'role',\n    storage\n}\n\nconst messagesConfig = {\n    key: 'messagesInfo',\n    storage\n}\n\nconst rootReducer = combineReducers({\n    socket,\n    loader,\n    apiFeedback,\n    role: persistReducer(roleConfig, role),\n    messagesInfo: persistReducer(messagesConfig, messagesInfo)\n})\n\nconst reducer = configureStore({\n    reducer: rootReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof reducer.dispatch\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore } from 'redux-persist'\n\nimport reducers from './reducers'\n\nexport const store =\n    process.env.NODE_ENV === 'production'\n        ? createStore(reducers)\n        : createStore(reducers, composeWithDevTools())\n\nexport const persistor = persistStore(store)\n","import { store } from 'redux/store'\n\nimport actions from 'redux/actions'\n\nconst setLoading = (loading: boolean) =>\n    store.dispatch({\n        type: actions.SET_LOADING,\n        payload: loading\n    })\n\nexport default setLoading\n","import utils from 'utils'\n\nconst handleApiError = (error: any) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.log(error)\n    }\n    if (error.response) {\n        const status = error.response.status\n        const { error: apiError } = error.response.data\n        if (status === 401 || status === 403) {\n            utils.setRole('guest')\n            utils.history.push('/?failedAuthentication=true')\n        }\n        if (!apiError) {\n            return utils.setApiFeedback('The connection could not be established with the server')\n        }\n        return utils.setApiFeedback(apiError)\n    }\n    if (error.request) {\n        return utils.setApiFeedback('The server cannot temporarily process your request')\n    }\n    utils.setApiFeedback('The app has encountered an unexpected error')\n}\n\nexport default handleApiError\n","import React from 'react'\n\ntype ApiValidationHandler = <T>(\n    error: any,\n    setForm: React.Dispatch<React.SetStateAction<T>>\n) => void\n\ntype Result = {\n    parameter: string\n    error: string\n}\n\ntype Response = {\n    status: number\n    data: {\n        results: Result[]\n    }\n}\n\nconst handleApiValidation: ApiValidationHandler = (error, setForm) => {\n    let errors = {}\n    const response: Response = error.response\n    if (response && response.status === 422) {\n        response.data.results.map(\n            ({ parameter, error }) =>\n                (errors = {\n                    ...errors,\n                    [`${parameter}Error`]: error\n                })\n        )\n        setForm(form => ({\n            ...form,\n            ...errors\n        }))\n    }\n}\n\nexport default handleApiValidation\n","import { store } from 'redux/store'\n\nimport actions from 'redux/actions'\n\nconst setRole = (role: Role) =>\n    store.dispatch({\n        type: actions.SET_ROLE,\n        payload: role\n    })\n\nexport default setRole\n","import { store } from 'redux/store'\n\nimport actions from 'redux/actions'\n\nconst setApiFeedback = (apiFeedback: string) =>\n    store.dispatch({\n        type: actions.SET_API_FEEDBACK,\n        payload: apiFeedback\n    })\n\nexport default setApiFeedback\n","const detectMobileDevice = () => 'ontouchstart' in document.documentElement\n\nexport default detectMobileDevice\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","const regex = {\n    images: /jpg|jpeg|png|gif/i,\n    videos: /mp4/i,\n    files: /txt|rtf|doc|docx|xlsx|ppt|pptx|pdf/i\n}\n\nconst sizes = {\n    imageMaxSize: 31457280, // 30MB\n    maxVideoSize: 52428800, // 50MB\n    maxFileSize: 10485760 // 10MB\n}\n\nconst filesInfo = {\n    regex,\n    sizes\n}\n\nexport default filesInfo\n","const defaultAvatar = (name: string) =>\n    `https://ui-avatars.com/api/?background=ffff00&name=${name.charAt(0)}`\n\nexport default defaultAvatar\n","import axios from './axios'\nimport subscribePushNotifications from './subscribePushNotifications'\nimport setLoading from './setLoading'\nimport handleApiError from './handleApiError'\nimport handleApiValidation from './handleApiValidation'\nimport setRole from './setRole'\nimport setApiFeedback from './setApiFeedback'\nimport detectMobileDevice from './detectMobileDevice'\nimport history from './history'\nimport filesInfo from './filesInfo'\nimport defaultAvatar from './defaultAvatar'\n\nconst utils = {\n    axios,\n    subscribePushNotifications,\n    setLoading,\n    handleApiError,\n    handleApiValidation,\n    setRole,\n    setApiFeedback,\n    detectMobileDevice,\n    history,\n    filesInfo,\n    defaultAvatar\n}\n\nexport default utils\n","import utils from 'utils'\n\nconst checkRole = (role: Role) => {\n    if (role === 'admin') {\n        utils.history.push('/admin/profile')\n    }\n    if (role === 'user') {\n        utils.history.push('/user/profile')\n    }\n}\n\nexport default checkRole\n","import checkRole from './checkRole'\n\nconst guestHelpers = {\n    checkRole\n}\n\nexport default guestHelpers\n","import { useEffect } from 'react'\n\nimport hooks from 'hooks'\n\nimport guestHelpers from '../helpers'\n\nconst useHelpers = () => {\n    const { role } = hooks.useRole()\n    const checkRole = () => {\n        guestHelpers.checkRole(role)\n    }\n    useEffect(() => {\n        checkRole()\n    }, [])\n}\n\nexport default useHelpers\n","import useHelpers from './useHelpers'\n\nconst guestHooks = {\n    useHelpers\n}\n\nexport default guestHooks\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport guestHooks from './hooks'\n\nconst GuestContainer = styled.section`\n    height: 100%;\n`\n\nconst Guest: React.FC = ({ children }) => {\n    guestHooks.useHelpers()\n    return <GuestContainer>{children}</GuestContainer>\n}\n\nexport default Guest\n","import utils from 'utils'\n\nconst checkRole = (role: Role) => {\n    if (role !== 'admin') {\n        utils.history.push('/')\n    }\n}\n\nexport default checkRole\n","import checkRole from './checkRole'\n\nconst adminHelpers = {\n    checkRole\n}\n\nexport default adminHelpers\n","import { useEffect } from 'react'\nimport io from 'socket.io-client'\n\nimport hooks from 'hooks'\n\nimport adminHelpers from '../helpers'\n\nconst useHelpers = () => {\n    const { socket, setSocket, clearSocket } = hooks.useSocket()\n    const { role } = hooks.useRole()\n    useEffect(() => {\n        if (!socket) {\n            setSocket(io('/admin'))\n        }\n        adminHelpers.checkRole(role)\n    }, [])\n    return {\n        clearSocket\n    }\n}\n\nexport default useHelpers\n","import useHelpers from './useHelpers'\n\nconst adminHooks = {\n    useHelpers\n}\n\nexport default adminHooks\n","import styled from 'styled-components/macro'\n\nexport default styled.h1`\n    font-size: 30px;\n    text-shadow: 1px 1px black;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 28px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 26px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 24px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 22px;\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Hamburger = {\n    withHamburger: boolean | undefined\n}\n\nexport default styled.div<Hamburger>`\n    cursor: pointer;\n    transition: all ease-in-out 0.3s;\n    transition-property: right, transform;\n    position: absolute;\n    top: 50%;\n    right: calc(0% - 40px);\n    transform: translate(-50%, -50%);\n    z-index: 2;\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        right: calc(0% + 20px);\n    }\n    ${({ withHamburger }) =>\n        withHamburger\n            ? css`\n                  transform: translate(-50%, -50%) rotate(45deg);\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Menu = {\n    withHamburger: boolean | undefined\n}\n\nexport default styled.ul<Menu>`\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.primaryColor};\n    transition: transform ease-in-out 0.5s;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    transform: translateX(100%);\n    z-index: 1;\n    ${({ withHamburger }) =>\n        withHamburger\n            ? css`\n                  @media (max-width: 1000px) {\n                      transform: translateX(0px);\n                  }\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Line = {\n    withHamburger: boolean | undefined\n}\n\nexport default styled.div<Line>`\n    width: 20px;\n    border-bottom: 3px solid black;\n    margin-bottom: 4px;\n    transition: 0.5s ease-in-out;\n    &:last-of-type {\n        margin-bottom: 0px;\n    }\n    ${({ withHamburger }) =>\n        withHamburger\n            ? css`\n                  margin-bottom: 0px;\n                  &:nth-child(1) {\n                      opacity: 0;\n                  }\n                  &:nth-child(3) {\n                      transform: rotate(90deg) translateX(-2.8px);\n                  }\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Links = {\n    hamburger: boolean | undefined\n}\n\nexport default styled.ul<Links>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: all ease-in-out 0.3s;\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        ${({ hamburger }) =>\n            hamburger &&\n            css`\n                transform: translateX(calc(100% + 41px));\n            `}\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Link = {\n    active: boolean\n    counter: number | undefined\n    withHamburger?: boolean\n}\n\nexport default styled.li<Link>`\n    margin-right: 20px;\n    white-space: nowrap;\n    cursor: pointer;\n    transition: all ease-in-out 0.5s;\n    transition-property: margin, font-size;\n    position: relative;\n    &:hover {\n        font-weight: bold;\n    }\n    &:last-of-type {\n        margin-right: 0px;\n        margin-bottom: 0px;\n    }\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 15px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 14px;\n        display: flex;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 13px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 12px;\n    }\n    ${({ active }) =>\n        active\n            ? css`\n                  font-weight: bold;\n              `\n            : null}\n    ${({ counter }) =>\n        counter\n            ? css`\n                  &::after {\n                      width: 20px;\n                      height: 20px;\n                      background: ${({ theme }) => theme.primaryColor};\n                      padding-top: 2px;\n                      border: 1px solid black;\n                      border-radius: 50%;\n                      cursor: initial;\n                      content: '${counter}';\n                      font-size: 11px;\n                      font-weight: bold;\n                      color: black;\n                      display: flex;\n                      justify-content: center;\n                      align-items: center;\n                      position: absolute;\n                      top: -18px;\n                      right: -18px;\n                      @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n                          margin-left: 8px;\n                          background: black;\n                          color: white;\n                          position: static;\n                      }\n                  }\n              `\n            : null}\n    ${({ withHamburger }) =>\n        withHamburger\n            ? css`\n                  margin-right: 0px;\n                  margin-bottom: 15px;\n                  @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n                      font-size: 16px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n                      font-size: 15px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n                      font-size: 14px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n                      font-size: 13px;\n                  }\n              `\n            : null}\n`\n","import Brand from './Brand'\nimport Hamburger from './Hamburger'\nimport Menu from './Menu'\nimport Line from './Line'\nimport Links from './Links'\nimport Link from './Link'\n\nconst Dashboard = {\n    Brand,\n    Hamburger,\n    Menu,\n    Line,\n    Links,\n    Link\n}\n\nexport default Dashboard\n","import React, { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { useLocation } from 'react-router'\n\nimport Dashboard from './styled/Dashboard'\n\nimport utils from 'utils'\n\nconst NavbarContainer = styled.nav`\n    width: 100%;\n    height: 80px;\n    padding: 0px 40px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    z-index: 2;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding: 0px 30px;\n        height: 65px;\n    }\n`\n\ninterface INavbar {\n    links: NavbarLink[]\n    hamburger?: boolean\n}\n\nconst Navbar: React.FC<INavbar> = ({ links, hamburger }) => {\n    const location = useLocation()\n    const [toggleHamburger, setToggleHamburger] = useState(false)\n    const withHamburger = hamburger && toggleHamburger\n    return (\n        <NavbarContainer>\n            <Dashboard.Brand>evo4x</Dashboard.Brand>\n            {hamburger && (\n                <Dashboard.Hamburger\n                    onClick={() => setToggleHamburger(toggleHamburger => !toggleHamburger)}\n                    withHamburger={withHamburger}\n                >\n                    <Dashboard.Line withHamburger={withHamburger} />\n                    <Dashboard.Line withHamburger={withHamburger} />\n                    <Dashboard.Line withHamburger={withHamburger} />\n                </Dashboard.Hamburger>\n            )}\n            <Dashboard.Menu withHamburger={withHamburger}>\n                {links.map(({ link, pathname, counter, onClick }) => (\n                    <Dashboard.Link\n                        key={link}\n                        onClick={onClick ? onClick : () => utils.history.push(pathname!)}\n                        active={pathname === location.pathname}\n                        counter={counter}\n                        withHamburger={withHamburger}\n                    >\n                        {link}\n                    </Dashboard.Link>\n                ))}\n            </Dashboard.Menu>\n            <Dashboard.Links hamburger={hamburger}>\n                {links.map(({ link, pathname, counter, onClick }) => (\n                    <Dashboard.Link\n                        key={link}\n                        onClick={onClick ? onClick : () => utils.history.push(pathname!)}\n                        active={pathname === location.pathname}\n                        counter={counter}\n                    >\n                        {link}\n                    </Dashboard.Link>\n                ))}\n            </Dashboard.Links>\n        </NavbarContainer>\n    )\n}\n\nexport default Navbar\n","type OnSendMessageHandler = {\n    chat: boolean | undefined\n    currentUser: User | undefined\n    lastUnreadMessageIndex: number | undefined\n    unreadMessagesAmount: number\n    setLastUnreadMessageIndex: any\n    setUnreadMessagesAmount: any\n}\n\nconst handleOnSendMessage = (\n    message: Message,\n    {\n        chat,\n        currentUser,\n        lastUnreadMessageIndex,\n        unreadMessagesAmount,\n        setLastUnreadMessageIndex,\n        setUnreadMessagesAmount\n    }: OnSendMessageHandler\n) => {\n    const withoutChatAndCurrentUser = !chat && message.user.id !== currentUser!.id\n    if (withoutChatAndCurrentUser) {\n        setUnreadMessagesAmount(unreadMessagesAmount + 1)\n        !lastUnreadMessageIndex\n            ? setLastUnreadMessageIndex(1)\n            : setLastUnreadMessageIndex(lastUnreadMessageIndex + 1)\n    }\n}\n\nexport default handleOnSendMessage\n","import utils from 'utils'\n\nconst checkRole = (role: Role) => {\n    if (role !== 'user') {\n        utils.history.push('/?failedAuthentication=true')\n    }\n}\n\nexport default checkRole\n","import utils from 'utils'\n\ntype UnreadMessagesInfoGetter = {\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>\n    setLastUnreadMessageIndex: any\n    setUnreadMessagesAmount: any\n}\n\ntype Response = {\n    user: User\n    lastUnreadMessageIndex: number\n    unreadMessagesAmount: number\n}\n\nconst getUnreadMessagesInfo = async ({\n    setCurrentUser,\n    setLastUnreadMessageIndex,\n    setUnreadMessagesAmount\n}: UnreadMessagesInfoGetter) => {\n    const url = '/api/user/communication/getUnreadMessagesInfo'\n    const response = await utils.axios.get<Response>(url)\n    if (response) {\n        const { user, lastUnreadMessageIndex, unreadMessagesAmount } = response.data\n        setCurrentUser(user)\n        setLastUnreadMessageIndex(lastUnreadMessageIndex)\n        setUnreadMessagesAmount(unreadMessagesAmount)\n    }\n}\n\nexport default getUnreadMessagesInfo\n","import utils from 'utils'\n\ntype LogoutHandler = (clearSocket: () => void) => void\n\nconst logout: LogoutHandler = async clearSocket => {\n    const url = '/api/global/auth/logout'\n    const response = await utils.axios.get(url)\n    if (response) {\n        sessionStorage.clear()\n        clearSocket()\n        utils.setRole('guest')\n        utils.history.push('/')\n    }\n}\n\nexport default logout\n","import handleOnSendMessage from './socket/handleOnSendMessage'\n\nimport checkRole from './checkRole'\nimport getUnreadMessagesInfo from './getUnreadMessagesInfo'\nimport logout from './logout'\n\nconst userHelpers = {\n    handleOnSendMessage,\n    checkRole,\n    getUnreadMessagesInfo,\n    logout\n}\n\nexport default userHelpers\n","import userHelpers from 'components/Shared/Roles/User/helpers'\n\nconst links = (clearSocket: () => void) => [\n    {\n        link: 'Analysis',\n        pathname: '/admin/analysis'\n    },\n    {\n        link: 'Logout',\n        onClick: () => userHelpers.logout(clearSocket)\n    }\n]\n\nexport default links\n","import links from './links'\n\nconst adminUtils = {\n    links\n}\n\nexport default adminUtils\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport hooks from 'hooks'\nimport adminHooks from './hooks'\n\nimport Navbar from 'components/Shared/Navbar/Navbar'\n\nimport adminUtils from './utils'\n\nconst AdminContainer = styled.section`\n    height: 100%;\n    padding-top: 80px;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding-top: 65px;\n    }\n`\n\nconst Admin: React.FC = ({ children }) => {\n    const { clearSocket } = hooks.useSocket()\n    const { role } = hooks.useRole()\n    adminHooks.useHelpers()\n    return role === 'admin' ? (\n        <AdminContainer>\n            <Navbar links={adminUtils.links(clearSocket)} hamburger />\n            {children}\n        </AdminContainer>\n    ) : null\n}\n\nexport default Admin\n","import { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\n\nimport hooks from 'hooks'\n\nimport userHelpers from '../helpers'\n\nconst useHelpers = (chat: boolean | undefined) => {\n    const { socket, setSocket } = hooks.useSocket()\n    const { role } = hooks.useRole()\n    const {\n        lastUnreadMessageIndex,\n        unreadMessagesAmount,\n        setLastUnreadMessageIndex,\n        setUnreadMessagesAmount\n    } = hooks.useMessagesInfo()\n    const [currentUser, setCurrentUser] = useState<User>()\n    const handleOnSendMessage = (message: Message) => {\n        userHelpers.handleOnSendMessage(message, {\n            chat,\n            currentUser,\n            lastUnreadMessageIndex,\n            unreadMessagesAmount,\n            setLastUnreadMessageIndex,\n            setUnreadMessagesAmount\n        })\n    }\n    useEffect(() => {\n        if (socket) {\n            socket.on('sendMessage', handleOnSendMessage)\n        }\n        return () => {\n            if (socket) {\n                socket.off('sendMessage', handleOnSendMessage)\n            }\n        }\n    }, [socket, currentUser, unreadMessagesAmount])\n    const getUnreadMessagesInfo = () => {\n        userHelpers.getUnreadMessagesInfo({\n            setCurrentUser,\n            setLastUnreadMessageIndex,\n            setUnreadMessagesAmount\n        })\n    }\n    const checkRole = () => {\n        userHelpers.checkRole(role)\n    }\n    useEffect(() => {\n        if (!socket) {\n            setSocket(io('/user'))\n        }\n        checkRole()\n        getUnreadMessagesInfo()\n    }, [])\n}\n\nexport default useHelpers\n","import useHelpers from './useHelpers'\n\nconst userHooks = {\n    useHelpers\n}\n\nexport default userHooks\n","import userHelpers from '../helpers'\n\nconst links = (unreadMessagesAmount: number, clearSocket: () => void) => [\n    {\n        link: 'Profile',\n        pathname: '/user/profile'\n    },\n    {\n        link: 'Analysis',\n        pathname: '/user/analysis'\n    },\n    {\n        link: 'Chat',\n        pathname: '/user/chat',\n        counter: unreadMessagesAmount <= 99 ? unreadMessagesAmount : 99\n    },\n    {\n        link: 'Sessions',\n        pathname: '/user/sessions'\n    },\n    {\n        link: 'Events',\n        pathname: '/user/events'\n    },\n    {\n        link: 'Indicators',\n        pathname: '/user/indicators'\n    },\n    {\n        link: 'Mottos',\n        pathname: '/user/mottos'\n    },\n    {\n        link: 'Aha-moments',\n        pathname: '/user/aha-moments'\n    },\n    {\n        link: 'Mentors',\n        pathname: '/user/mentors'\n    },\n    {\n        link: 'Logout',\n        onClick: () => userHelpers.logout(clearSocket)\n    }\n]\n\nexport default links\n","import links from './links'\n\nconst userUtils = {\n    links\n}\n\nexport default userUtils\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport hooks from 'hooks'\nimport userHooks from './hooks'\n\nimport Navbar from 'components/Shared/Navbar/Navbar'\n\nimport userUtils from './utils'\n\nconst UserContainer = styled.section`\n    height: 100%;\n    padding-top: 80px;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding-top: 65px;\n    }\n`\n\ninterface IUser {\n    chat?: boolean\n}\n\nconst User: React.FC<IUser> = ({ children, chat }) => {\n    const { clearSocket } = hooks.useSocket()\n    const { role } = hooks.useRole()\n    const { unreadMessagesAmount } = hooks.useMessagesInfo()\n    userHooks.useHelpers(chat)\n    return role === 'user' ? (\n        <UserContainer>\n            <Navbar links={userUtils.links(unreadMessagesAmount, clearSocket)} hamburger />\n            {children}\n        </UserContainer>\n    ) : null\n}\n\nexport default User\n","import { useAppSelector } from 'redux/hooks'\n\nconst useLoader = () => {\n    const { loading } = useAppSelector(state => state.loader)\n    return {\n        loading\n    }\n}\n\nexport default useLoader\n","import useLoader from './useLoader'\n\nconst loaderHooks = {\n    useLoader\n}\n\nexport default loaderHooks\n","import styled, { css } from 'styled-components/macro'\n\ntype BlackLayer = {\n    showLayer: boolean\n}\n\nexport default styled.section<BlackLayer>`\n    width: 100%;\n    height: 100%;\n    transition: background ease-in-out 0.3s;\n    position: absolute;\n    z-index: 3;\n    pointer-events: none;\n    ${({ showLayer }) =>\n        showLayer\n            ? css`\n                  background: rgba(0, 0, 0, 0.5);\n                  pointer-events: auto;\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.button`\n    background: black;\n    color: white;\n    font-size: 14px;\n    border-radius: 5px;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 13px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 12px;\n    }\n`\n","import BlackLayer from './BlackLayer'\nimport Button from './Button'\n\nconst sharedStyled = {\n    BlackLayer,\n    Button\n}\n\nexport default sharedStyled\n","import styled, { keyframes, css } from 'styled-components/macro'\n\nconst rotate = keyframes`\n    0% {\n        transform: rotateZ(0deg) scale(1);\n    }\n    50% {\n        transform: rotateZ(360deg) scale(1.3);\n    }\n    100% {\n        transform: rotateZ(720deg) scale(1);\n    }\n`\n\ntype Logo = {\n    $loading: boolean\n}\n\nexport default styled.img<Logo>`\n    width: 40px;\n    border-radius: 10px;\n    box-shadow: 0px 0px 15px -10px black;\n    transition: bottom ease-in-out 0.3s;\n    animation: ${rotate} ease-in-out 2s infinite alternate 0.3s;\n    position: fixed;\n    bottom: -52px;\n    left: 20px;\n    z-index: 2;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        width: 38px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        width: 36px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        width: 34px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        width: 32px;\n    }\n    ${({ $loading }) =>\n        $loading\n            ? css`\n                  bottom: 20px;\n              `\n            : null}\n`\n","import Logo from './Logo'\n\nconst Dashboard = {\n    Logo\n}\n\nexport default Dashboard\n","export default __webpack_public_path__ + \"static/media/Logo.4e59e360.png\";","import styled from 'styled-components/macro'\n\nimport loaderHooks from './hooks'\n\nimport sharedStyled from 'components/Shared/styled'\nimport Dashboard from './styled/Dashboard'\n\nimport Logo from 'assets/images/Logo.png'\n\nconst LoaderContainer = styled(sharedStyled.BlackLayer)`\n    position: fixed;\n    z-index: 4;\n`\n\nconst Loader = () => {\n    const { loading } = loaderHooks.useLoader()\n    return (\n        <LoaderContainer showLayer={loading}>\n            <Dashboard.Logo src={Logo} $loading={loading} />\n        </LoaderContainer>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst AnalysisContainer = styled.div``\n\nconst Analysis = () => {\n    return <AnalysisContainer></AnalysisContainer>\n}\n\nexport default Analysis\n","import utils from 'utils'\n\ntype EmailAuthenticator = {\n    emailToken: string | string[] | null\n    setShowLoginModal: DispatchBoolean\n}\n\nconst authenticateEmail = ({ emailToken, setShowLoginModal }: EmailAuthenticator) => {\n    const authenticateEmail = async () => {\n        setShowLoginModal(true)\n        const url = '/api/user/auth/authenticateEmail'\n        await utils.axios.post(url, {\n            emailToken\n        })\n    }\n    if (emailToken) {\n        authenticateEmail()\n    }\n}\n\nexport default authenticateEmail\n","import authenticateEmail from './authenticateEmail'\n\nconst homeHelpers = {\n    authenticateEmail\n}\n\nexport default homeHelpers\n","import { useEffect } from 'react'\n\nimport hooks from 'hooks'\n\nimport homeHelpers from '../helpers'\n\ntype HelpersHook = {\n    setShowLoginModal: DispatchBoolean\n}\n\nconst useHelpers = ({ setShowLoginModal }: HelpersHook) => {\n    const { emailToken } = hooks.useQueryParams()\n    useEffect(() => {\n        homeHelpers.authenticateEmail({\n            emailToken,\n            setShowLoginModal\n        })\n    }, [emailToken])\n    const handleToggler = (dispatcher: DispatchBoolean) => dispatcher(state => !state)\n    return {\n        handleToggler\n    }\n}\n\nexport default useHelpers\n","import useHelpers from './useHelpers'\n\nconst homeHooks = {\n    useHelpers\n}\n\nexport default homeHooks\n","import utils from 'utils'\n\nimport registerModalHelpers from '.'\n\nexport type Form = {\n    name: string\n    nameError: string\n    email: string\n    emailError: string\n    password: string\n    passwordError: string\n    repeatedPassword: string\n    repeatedPasswordError: string\n}\n\ntype RegistrationHandler = {\n    event: React.FormEvent\n    form: Form\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    formHandler: any\n}\n\nconst register = async ({ event, form, setForm, formHandler }: RegistrationHandler) => {\n    event.preventDefault()\n    if (\n        registerModalHelpers.validate({\n            form,\n            setForm,\n            formHandler\n        })\n    ) {\n        try {\n            const url = '/api/user/auth/register'\n            const { name, email, password, repeatedPassword } = form\n            await utils.axios.post(url, {\n                name,\n                email,\n                password,\n                repeatedPassword\n            })\n        } catch (error) {\n            utils.handleApiValidation(error, setForm)\n        }\n    }\n}\n\nexport default register\n","import { Form } from './register'\n\ntype Validator = {\n    form: Form\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    formHandler: any\n}\n\nconst validate = ({ form, setForm, formHandler }: Validator) => {\n    let validated = true\n    setForm(form => ({\n        ...form,\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        repeatedPasswordError: ''\n    }))\n    const { name, email, password, repeatedPassword } = form\n    if (!formHandler.validateProperty('name', name)) validated = false\n    if (!formHandler.validateEmail(email)) validated = false\n    if (!formHandler.validatePassword(password, repeatedPassword, false)) validated = false\n    if (!formHandler.validateRepeatedPassword(repeatedPassword, password)) validated = false\n    return validated\n}\n\nexport default validate\n","import register from './register'\nimport validate from './validate'\n\nconst registrationModalHelpers = {\n    register,\n    validate\n}\n\nexport default registrationModalHelpers\n","import { useState } from 'react'\n\nimport hooks from 'hooks'\n\nimport registrationModalHelpers from '../helpers'\n\nconst useForm = () => {\n    const [form, setForm] = useState({\n        name: '',\n        nameError: '',\n        email: '',\n        emailError: '',\n        password: '',\n        passwordError: '',\n        repeatedPassword: '',\n        repeatedPasswordError: ''\n    })\n    const formHandler = hooks.useFormHandler(setForm)\n    const register = (event: React.FormEvent) => {\n        registrationModalHelpers.register({\n            event,\n            form,\n            setForm,\n            formHandler\n        })\n    }\n    return {\n        form,\n        formHandler,\n        register\n    }\n}\n\nexport default useForm\n","import useForm from './useForm'\n\nconst registrationModalHooks = {\n    useForm\n}\n\nexport default registrationModalHooks\n","import { useEffect } from 'react'\nimport { useAppSelector } from 'redux/hooks'\n\nimport utils from 'utils'\n\nconst useApiFeedback = () => {\n    const { apiFeedback } = useAppSelector(state => state.apiFeedback)\n    useEffect(() => {\n        if (apiFeedback) {\n            setTimeout(() => utils.setApiFeedback(''), 5000)\n        }\n    }, [apiFeedback])\n    return {\n        apiFeedback\n    }\n}\n\nexport default useApiFeedback\n","import useApiFeedback from './useApiFeedback'\n\nconst apiFeedbackHooks = {\n    useApiFeedback\n}\n\nexport default apiFeedbackHooks\n","import styled from 'styled-components/macro'\n\nimport apiFeedbackHooks from './hooks'\n\nimport sharedStyled from 'components/Shared/styled'\n\nconst ApiFeedbackContainer = styled(sharedStyled.Button)`\n    max-width: 85%;\n    margin: 40px auto 0px auto;\n    padding: 10px 20px;\n    border-radius: 0px;\n    cursor: initial;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        max-width: 100%;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 11px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 10px;\n    }\n`\n\nconst ApiFeedback = () => {\n    const { apiFeedback } = apiFeedbackHooks.useApiFeedback()\n    return apiFeedback ? <ApiFeedbackContainer as=\"p\">{apiFeedback}</ApiFeedbackContainer> : null\n}\n\nexport default ApiFeedback\n","import styled, { css } from 'styled-components/macro'\n\ntype Content = {\n    showModal: boolean\n}\n\nexport default styled.dialog<Content>`\n    width: 50%;\n    min-height: 70%;\n    background: ${({ theme }) => theme.primaryColor};\n    padding: 40px 0px;\n    border-radius: 10px;\n    transition: width ease-in-out 0.3s, min-height ease-in-out 0.3s, border-radius ease-in-out 0.3s,\n        transform ease-in-out 0.6s, top ease-in-out 0.6s;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    position: absolute;\n    top: 0%;\n    left: 50%;\n    transform: translate(-50%, -100%);\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        width: 60%;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        width: 80%;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        width: 100%;\n        min-height: 100%;\n        border-radius: 0px;\n    }\n    ${({ showModal }) =>\n        showModal\n            ? css`\n                  top: 50%;\n                  transform: translate(-50%, -50%);\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    font-size: 25px;\n    font-weight: bold;\n    text-shadow: 1px 1px white;\n    cursor: pointer;\n    position: absolute;\n    top: 25px;\n    right: 30px;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 23px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 21px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 19px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 17px;\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Header = {\n    scaleOut?: boolean\n}\n\nexport default styled.h2<Header>`\n    max-height: 92px;\n    margin-bottom: 30px;\n    font-size: 25px;\n    white-space: pre-line;\n    line-height: 2;\n    font-weight: bold;\n    text-shadow: 1px 1px white;\n    transition: all 0.3s ease-in-out;\n    transition-property: max-height, margin-bottom, transform;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 23px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 21px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 19px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 17px;\n    }\n    ${({ scaleOut }) =>\n        scaleOut\n            ? css`\n                  max-height: 0px;\n                  margin-bottom: 0px;\n                  transform: scale(0);\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.form`\n    width: 70%;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.label`\n    font-size: 15px;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 14px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 13px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 12px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 11px;\n    }\n`\n","import Content from './Content'\nimport CloseButton from './CloseButton'\nimport Header from './Header'\nimport Form from './Form'\nimport Label from './Label'\nimport Input from './Input'\nimport Textarea from './Textarea'\nimport Error from './Error'\nimport Submit from './Submit'\n\nconst Dashboard = {\n    Content,\n    CloseButton,\n    Header,\n    Form,\n    Label,\n    Input,\n    Textarea,\n    Error,\n    Submit\n}\n\nexport default Dashboard\n","import styled from 'styled-components/macro'\n\nexport default styled.input`\n    width: 100%;\n    padding: 10px 0px;\n    border-bottom: 1px solid black;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 15px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 14px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 13px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 12px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.textarea`\n    width: 100%;\n    min-height: 150px;\n    margin-top: 10px;\n    padding: 10px;\n    resize: none;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.p`\n    margin-top: 5px;\n    font-size: 12px;\n    text-align: left;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 11px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 10px;\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\nimport sharedStyled from 'components/Shared/styled'\n\ntype Submit = {\n    scaleIn?: boolean\n}\n\nexport default styled(sharedStyled.Button)<Submit>`\n    max-height: 0px;\n    margin: 0px auto;\n    padding: 0px;\n    overflow: hidden;\n    transition: all 0.3s ease-in-out;\n    transition-property: max-height, margin, padding;\n    ${({ scaleIn }) =>\n        scaleIn || scaleIn === undefined\n            ? css`\n                  max-height: 43px;\n                  margin: 40px auto 0px auto;\n                  padding: 12px 30px;\n              `\n            : null}\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Dashboard from '../styled/Dashboard'\n\nconst InputContainer = styled.div`\n    width: 100%;\n    margin-bottom: 20px;\n    &:last-of-type {\n        margin-bottom: 0px;\n    }\n`\n\ninterface IInput {\n    id: string\n    name: string\n    type: 'textarea' | 'text' | 'email' | 'password'\n    label: string\n    value: string\n    placeholder: string\n    error: string\n    onChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>\n}\n\nconst Input: React.FC<IInput> = ({\n    id,\n    name,\n    type,\n    label,\n    value,\n    placeholder,\n    error,\n    onChange\n}) => {\n    return (\n        <InputContainer>\n            <Dashboard.Label htmlFor={id}>{label}</Dashboard.Label>\n            {type === 'textarea' ? (\n                <Dashboard.Textarea\n                    id={id}\n                    name={name}\n                    value={value}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                />\n            ) : (\n                <Dashboard.Input\n                    id={id}\n                    name={name}\n                    type={type}\n                    value={value}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                />\n            )}\n            {error && <Dashboard.Error>{error}</Dashboard.Error>}\n        </InputContainer>\n    )\n}\n\nexport default Input\n","import Input from './Input'\n\nconst Composed = {\n    Input\n}\n\nexport default Composed\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport registrationModalHooks from './hooks'\n\nimport ApiFeedback from 'components/Shared/ApiFeedback/ApiFeedback'\n\nimport sharedStyled from 'components/Shared/styled'\nimport Dashboard from './styled/Dashboard'\n\nimport Composed from './composed'\n\nconst RegistrationModalContainer = styled(sharedStyled.BlackLayer)``\n\ninterface IRegistrationModal {\n    showModal: boolean\n    toggleModal: () => void\n}\n\nconst RegistrationModal: React.FC<IRegistrationModal> = ({ showModal, toggleModal }) => {\n    const {\n        form: {\n            name,\n            nameError,\n            email,\n            emailError,\n            password,\n            passwordError,\n            repeatedPassword,\n            repeatedPasswordError\n        },\n        formHandler,\n        register\n    } = registrationModalHooks.useForm()\n    const formCompleted = !!name && !!email && !!password && !!repeatedPassword\n    return (\n        <RegistrationModalContainer showLayer={showModal}>\n            <Dashboard.Content showModal={showModal}>\n                <Dashboard.CloseButton onClick={toggleModal}>✕</Dashboard.CloseButton>\n                <Dashboard.Header scaleOut={formCompleted}>\n                    {`\"You either win or learn - \n                    not win or lose\"`}\n                </Dashboard.Header>\n                <Dashboard.Form onSubmit={register} noValidate>\n                    <Composed.Input\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        label=\"Name\"\n                        value={name}\n                        placeholder=\"Type your name\"\n                        error={nameError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <Composed.Input\n                        id=\"registrationEmail\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email address\"\n                        value={email}\n                        placeholder=\"Type your email address\"\n                        error={emailError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <Composed.Input\n                        id=\"registrationPassword\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        placeholder=\"Type your password\"\n                        error={passwordError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <Composed.Input\n                        id=\"registrationRepeatedPassword\"\n                        name=\"repeatedPassword\"\n                        type=\"password\"\n                        label=\"Password again\"\n                        value={repeatedPassword}\n                        placeholder=\"Type your password again\"\n                        error={repeatedPasswordError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <Dashboard.Submit scaleIn={formCompleted}>Join evo4x</Dashboard.Submit>\n                    <ApiFeedback />\n                </Dashboard.Form>\n            </Dashboard.Content>\n        </RegistrationModalContainer>\n    )\n}\n\nexport default RegistrationModal\n","import login from './login'\nimport validate from './validate'\n\nconst loginModalHelpers = {\n    login,\n    validate\n}\n\nexport default loginModalHelpers\n","import utils from 'utils'\n\nimport loginModalHelpers from '.'\n\nexport type Form = {\n    email: string\n    emailError: string\n    password: string\n    passwordError: string\n}\n\ntype LoginHandler = {\n    event: React.FormEvent\n    role: Role\n    form: Form\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    formHandler: any\n}\n\nconst login = async ({ event, role, form, setForm, formHandler }: LoginHandler) => {\n    event.preventDefault()\n    if (\n        loginModalHelpers.validate({\n            form,\n            setForm,\n            formHandler\n        })\n    ) {\n        try {\n            const url = `/api/${role}/auth/login`\n            const { email, password } = form\n            const response = await utils.axios.post(url, {\n                email,\n                password\n            })\n            if (response) {\n                utils.setRole(role)\n                utils.history.push(role === 'admin' ? '/admin/analysis' : '/user/profile')\n            }\n        } catch (error) {\n            utils.handleApiValidation(error, setForm)\n        }\n    }\n}\n\nexport default login\n","import { Form } from './login'\n\ntype Validator = {\n    form: Form\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    formHandler: any\n}\n\nconst validate = ({ form, setForm, formHandler }: Validator) => {\n    let validated = true\n    setForm(form => ({\n        ...form,\n        emailError: '',\n        passwordError: ''\n    }))\n    const { email, password } = form\n    if (!formHandler.validateEmail(email)) validated = false\n    if (!formHandler.validatePassword(password, '', true)) validated = false\n    return validated\n}\n\nexport default validate\n","import useForm from './useForm'\n\nconst loginModalHooks = {\n    useForm\n}\n\nexport default loginModalHooks\n","import { useState } from 'react'\n\nimport hooks from 'hooks'\n\nimport loginModalHelpers from '../helpers'\n\ntype FormHook = {\n    role: Role\n}\n\nconst useForm = ({ role }: FormHook) => {\n    const [form, setForm] = useState({\n        email: '',\n        emailError: '',\n        password: '',\n        passwordError: ''\n    })\n    const formHandler = hooks.useFormHandler(setForm)\n    const login = (event: React.FormEvent) => {\n        loginModalHelpers.login({\n            event,\n            role,\n            form,\n            setForm,\n            formHandler\n        })\n    }\n    return {\n        form,\n        formHandler,\n        login\n    }\n}\n\nexport default useForm\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport loginModalHooks from './hooks'\n\nimport ApiFeedback from 'components/Shared/ApiFeedback/ApiFeedback'\n\nimport sharedStyled from 'components/Shared/styled'\nimport RegistrationModalDashboard from 'components/Guest/Modals/RegistrationModal/styled/Dashboard'\n\nimport RegistrationModalComposed from 'components/Guest/Modals/RegistrationModal/composed'\n\nconst LoginModalContainer = styled(sharedStyled.BlackLayer)``\n\ninterface ILoginModal {\n    role: Role\n    setRole: React.Dispatch<React.SetStateAction<Role>>\n    showModal: boolean\n    toggleModal: () => void\n}\n\nconst LoginModal: React.FC<ILoginModal> = ({ role, setRole, showModal, toggleModal }) => {\n    const {\n        form: { email, emailError, password, passwordError },\n        formHandler,\n        login\n    } = loginModalHooks.useForm({\n        role\n    })\n    const closeModal = () => {\n        setRole('user')\n        toggleModal()\n    }\n    return (\n        <LoginModalContainer showLayer={showModal}>\n            <RegistrationModalDashboard.Content showModal={showModal}>\n                <RegistrationModalDashboard.CloseButton onClick={closeModal}>\n                    ✕\n                </RegistrationModalDashboard.CloseButton>\n                <RegistrationModalDashboard.Header>\n                    \"Get rich or die trying\"\n                </RegistrationModalDashboard.Header>\n                <RegistrationModalDashboard.Form onSubmit={login} noValidate>\n                    <RegistrationModalComposed.Input\n                        id=\"loginEmail\"\n                        name=\"email\"\n                        type=\"email\"\n                        label=\"Email address\"\n                        value={email}\n                        placeholder=\"Type your email address\"\n                        error={emailError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <RegistrationModalComposed.Input\n                        id=\"loginPassword\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        placeholder=\"Type your password\"\n                        error={passwordError}\n                        onChange={formHandler.handleInputValue}\n                    />\n                    <RegistrationModalDashboard.Submit>Login</RegistrationModalDashboard.Submit>\n                    <ApiFeedback />\n                </RegistrationModalDashboard.Form>\n            </RegistrationModalDashboard.Content>\n        </LoginModalContainer>\n    )\n}\n\nexport default LoginModal\n","import Header from './Header'\nimport Logo from './Logo'\nimport HiddenButton from './HiddenButton'\nimport Button from './Button'\nimport Advantages from './Advantages'\nimport Advantage from './Advantage'\nimport Dollar from './Dollar'\n\nconst Dashboard = {\n    Header,\n    Logo,\n    HiddenButton,\n    Button,\n    Advantages,\n    Advantage,\n    Dollar\n}\n\nexport default Dashboard\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    flex: 0.5;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        display: none;\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Logo = {\n    mobile?: boolean\n}\n\nexport default styled.img<Logo>`\n    width: 200px;\n    margin-bottom: 50px;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        width: 150px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        width: 130px;\n    }\n    ${({ mobile }) =>\n        mobile\n            ? css`\n                  display: none;\n                  @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n                      width: 80px;\n                      margin: 30px auto 0px auto;\n                      display: block;\n                  }\n                  @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n                      width: 70px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n                      width: 60px;\n                  }\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.button`\n    width: 30px;\n    height: 30px;\n    cursor: initial;\n    position: absolute;\n    bottom: 0px;\n    right: 0px;\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Button = {\n    $fill: boolean\n}\n\nexport default styled.button<Button>`\n    margin: 60px auto 0px auto;\n    padding: 15px 20px 10px 20px;\n    border-bottom: 3px solid ${({ theme }) => theme.primaryColor};\n    text-shadow: 1px 1px white;\n    font-size: 22px;\n    transition: all ease-in-out 0.3s;\n    transition-property: border-radius, box-shadow;\n    &:hover {\n        border-radius: 10px;\n        box-shadow: inset 0px -58px ${({ theme }) => theme.primaryColor};\n    }\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 20px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 18px;\n    }\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        margin-top: 30px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        padding: 13px 15px 8px 15px;\n        font-size: 16px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 14px;\n    }\n    ${({ $fill }) =>\n        $fill\n            ? css`\n                  border-radius: 10px;\n                  box-shadow: inset 0px -58px ${({ theme }) => theme.primaryColor};\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.ul`\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        padding: 0px 20px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.li`\n    margin-bottom: 30px;\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:last-of-type {\n        margin-bottom: 0px;\n    }\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 18px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 16px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 14px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 12px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    margin-right: 10px;\n    font-size: 25px;\n    font-weight: bold;\n    text-shadow: 2px 2px ${({ theme }) => theme.primaryColor};\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 23px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 21px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 19px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 17px;\n    }\n`\n","import handleQueryParams from './handleQueryParams'\nimport handleHelpSidebar from './handleHelpSidebar'\nimport validate from './validate'\n\nconst helpSidebarHelpers = {\n    handleQueryParams,\n    handleHelpSidebar,\n    validate\n}\n\nexport default helpSidebarHelpers\n","import { ParsedQuery } from 'query-string'\n\ntype QueryParamsHandler = {\n    params: ParsedQuery<string>\n    setIssue: React.Dispatch<React.SetStateAction<Issue>>\n    toggleSidebar: () => void\n    showLoginModal: () => void\n}\n\nconst handleQueryParams = ({\n    params,\n    setIssue,\n    toggleSidebar,\n    showLoginModal\n}: QueryParamsHandler) => {\n    const { failedAuthentication, passwordToken } = params\n    if (failedAuthentication) {\n        showLoginModal()\n    }\n    if (passwordToken) {\n        setIssue('changePassword')\n        toggleSidebar()\n    }\n}\n\nexport default handleQueryParams\n","import utils from 'utils'\n\nimport helpSidebarHelpers from '.'\n\nexport type Form = {\n    email: string\n    emailError: string\n    password: string\n    passwordError: string\n    repeatedPassword: string\n    repeatedPasswordError: string\n}\n\ntype HelpSidebarHandler = {\n    event: React.FormEvent\n    form: Form\n    passwordToken: string | string[] | null\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    formHandler: any\n    issue: Issue\n    setIssue: React.Dispatch<React.SetStateAction<Issue>>\n    hideSidebar: () => void\n    showLoginModal: () => void\n}\n\nconst handleHelpSidebar = async ({\n    event,\n    form,\n    passwordToken,\n    setForm,\n    formHandler,\n    issue,\n    setIssue,\n    hideSidebar,\n    showLoginModal\n}: HelpSidebarHandler) => {\n    event.preventDefault()\n    if (\n        helpSidebarHelpers.validate({\n            form,\n            setForm,\n            issue,\n            formHandler\n        })\n    ) {\n        try {\n            if (issue === 'changePassword') {\n                const url = '/api/user/auth/changePassword'\n                const { password, repeatedPassword } = form\n                const response = await utils.axios.post(url, {\n                    password,\n                    repeatedPassword,\n                    passwordToken\n                })\n                if (response) {\n                    setIssue('')\n                    hideSidebar()\n                    showLoginModal()\n                }\n            } else {\n                const url = `/api/user/auth/${\n                    issue === 'password' ? 'requestPasswordChange' : 'resendEmail'\n                }`\n                const { email } = form\n                await utils.axios.post(url, {\n                    email\n                })\n            }\n        } catch (error) {\n            utils.handleApiValidation(error, setForm)\n        }\n    }\n}\n\nexport default handleHelpSidebar\n","import { Form } from './handleHelpSidebar'\n\ntype Validator = {\n    form: Form\n    setForm: React.Dispatch<React.SetStateAction<Form>>\n    issue: Issue\n    formHandler: any\n}\n\nconst validate = ({ issue, form, setForm, formHandler }: Validator) => {\n    let validated = true\n    setForm(form => ({\n        ...form,\n        emailError: '',\n        passwordError: '',\n        repeatedPasswordError: ''\n    }))\n    if (issue === 'changePassword') {\n        const { password, repeatedPassword } = form\n        if (!formHandler.validatePassword(password, '', false)) validated = false\n        if (!formHandler.validateRepeatedPassword(repeatedPassword, password)) validated = false\n    } else {\n        const { email } = form\n        if (!formHandler.validateEmail(email)) validated = false\n    }\n    return validated\n}\n\nexport default validate\n","import useHelpSidebar from './useHelpSidebar'\n\nconst helpSidebarHooks = {\n    useHelpSidebar\n}\n\nexport default helpSidebarHooks\n","import { useEffect, useState } from 'react'\n\nimport hooks from 'hooks'\n\nimport helpSidebarHelpers from '../helpers'\n\ntype HelpSidebarHook = {\n    toggleSidebar: () => void\n    hideSidebar: () => void\n    showLoginModal: () => void\n}\n\nconst useHelpSidebar = ({ toggleSidebar, hideSidebar, showLoginModal }: HelpSidebarHook) => {\n    const params = hooks.useQueryParams()\n    const [form, setForm] = useState({\n        email: '',\n        emailError: '',\n        password: '',\n        passwordError: '',\n        repeatedPassword: '',\n        repeatedPasswordError: ''\n    })\n    const formHandler = hooks.useFormHandler(setForm)\n    const [issue, setIssue] = useState<Issue>('')\n    useEffect(() => {\n        helpSidebarHelpers.handleQueryParams({\n            params,\n            setIssue,\n            toggleSidebar,\n            showLoginModal\n        })\n    }, [])\n    const handleHelpSidebar = (event: React.FormEvent) => {\n        helpSidebarHelpers.handleHelpSidebar({\n            event,\n            form,\n            passwordToken: params.passwordToken,\n            setForm,\n            formHandler,\n            issue,\n            setIssue,\n            hideSidebar,\n            showLoginModal\n        })\n    }\n    return {\n        form,\n        formHandler,\n        issue,\n        setIssue,\n        handleHelpSidebar\n    }\n}\n\nexport default useHelpSidebar\n","import Content from './Content'\nimport Issue from './Issue'\nimport Form from './Form'\n\nconst StyledHelpSidebar = {\n    Content,\n    Issue,\n    Form\n}\n\nexport default StyledHelpSidebar\n","import styled, { css } from 'styled-components/macro'\n\ntype Content = {\n    showSidebar: boolean\n}\n\nexport default styled.aside<Content>`\n    width: 350px;\n    height: 100%;\n    padding-top: 40px;\n    background: ${({ theme }) => theme.primaryColor};\n    box-shadow: -5px 0px 15px -10px white;\n    transition: width ease-in-out 0.3s, transform ease-in-out 0.6s;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    position: absolute;\n    right: 0px;\n    transform: translateX(100%);\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        width: 300px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        width: 100%;\n    }\n    ${({ showSidebar }) =>\n        showSidebar\n            ? css`\n                  transform: translateX(0px);\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\nimport sharedStyled from 'components/Shared/styled'\n\ntype Issue = {\n    active: boolean\n}\n\nexport default styled(sharedStyled.Button)<Issue>`\n    max-width: 80%;\n    margin-bottom: 40px;\n    padding: 10px 20px;\n    border-radius: 0px;\n    cursor: pointer;\n    &:hover {\n        transform: scale(1.03);\n    }\n    &:last-of-type {\n        margin-bottom: 0px;\n    }\n    ${({ active }) =>\n        active\n            ? css`\n                  transform: scale(1.03);\n                  border-bottom: 2px solid white;\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.form`\n    width: 80%;\n    margin-top: 40px;\n`\n","import issues from './issues'\n\nconst helpSidebarUtils = {\n    issues\n}\n\nexport default helpSidebarUtils\n","import React from 'react'\n\nconst issues = (issue: Issue, setIssue: React.Dispatch<React.SetStateAction<Issue>>) => [\n    {\n        issue: 'Have not you received any e-mail?',\n        active: issue === 'email',\n        handleOnClick: () => setIssue('email')\n    },\n    {\n        issue: 'Has the link to authenticate your email address expired?',\n        active: issue === 'link',\n        handleOnClick: () => setIssue('link')\n    },\n    {\n        issue: 'Did you forget the password?',\n        active: issue === 'password',\n        handleOnClick: () => setIssue('password')\n    }\n]\n\nexport default issues\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport helpSidebarHooks from './hooks'\n\nimport ApiFeedback from 'components/Shared/ApiFeedback/ApiFeedback'\n\nimport sharedStyled from 'components/Shared/styled'\nimport StyledHelpSidebar from 'components/Guest/Home/styled/HelpSidebar'\nimport RegistrationModalDashboard from 'components/Guest/Modals/RegistrationModal/styled/Dashboard'\n\nimport RegistrationModalComposed from 'components/Guest/Modals/RegistrationModal/composed'\n\nimport helpSidebarUtils from './utils'\n\nconst HelpSidebarContainer = styled(sharedStyled.BlackLayer)``\n\ninterface IHelpSidebar {\n    showSidebar: boolean\n    toggleSidebar: () => void\n    hideSidebar: () => void\n    showLoginModal: () => void\n}\n\nconst HelpSidebar: React.FC<IHelpSidebar> = ({\n    showSidebar,\n    toggleSidebar,\n    hideSidebar,\n    showLoginModal\n}) => {\n    const {\n        form: {\n            email,\n            emailError,\n            password,\n            passwordError,\n            repeatedPassword,\n            repeatedPasswordError\n        },\n        formHandler,\n        issue,\n        setIssue,\n        handleHelpSidebar\n    } = helpSidebarHooks.useHelpSidebar({\n        toggleSidebar,\n        hideSidebar,\n        showLoginModal\n    })\n    const renderIssues = () => {\n        return helpSidebarUtils.issues(issue, setIssue).map(({ issue, active, handleOnClick }) => (\n            <StyledHelpSidebar.Issue key={issue} active={active} onClick={handleOnClick}>\n                {issue}\n            </StyledHelpSidebar.Issue>\n        ))\n    }\n    const closeHelpSidebar = () => {\n        setTimeout(() => setIssue(''), 600)\n        toggleSidebar()\n    }\n    return (\n        <HelpSidebarContainer showLayer={showSidebar}>\n            <StyledHelpSidebar.Content showSidebar={showSidebar}>\n                <RegistrationModalDashboard.CloseButton onClick={closeHelpSidebar}>\n                    ✕\n                </RegistrationModalDashboard.CloseButton>\n                {renderIssues()}\n                {issue && (\n                    <StyledHelpSidebar.Form onSubmit={handleHelpSidebar} noValidate>\n                        {issue === 'changePassword' ? (\n                            <>\n                                <RegistrationModalComposed.Input\n                                    id=\"helpSidebarPassword\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"New password\"\n                                    value={password}\n                                    placeholder=\"Type your password\"\n                                    error={passwordError}\n                                    onChange={formHandler.handleInputValue}\n                                />\n                                <RegistrationModalComposed.Input\n                                    id=\"helpSidebarRepeatedPassword\"\n                                    name=\"repeatedPassword\"\n                                    type=\"password\"\n                                    label=\"Password again\"\n                                    value={repeatedPassword}\n                                    placeholder=\"Type your password again\"\n                                    error={repeatedPasswordError}\n                                    onChange={formHandler.handleInputValue}\n                                />\n                            </>\n                        ) : (\n                            <RegistrationModalComposed.Input\n                                id=\"helpSidebarEmail\"\n                                name=\"email\"\n                                type=\"email\"\n                                label=\"Email address\"\n                                value={email}\n                                placeholder=\"Type your email address\"\n                                error={emailError}\n                                onChange={formHandler.handleInputValue}\n                            />\n                        )}\n                        <RegistrationModalDashboard.Submit>\n                            {issue === 'email'\n                                ? 'Resend e-mail'\n                                : issue === 'link'\n                                ? 'Resend link'\n                                : issue === 'password'\n                                ? 'Request password change'\n                                : issue === 'changePassword' && 'Change password'}\n                        </RegistrationModalDashboard.Submit>\n                        <ApiFeedback />\n                    </StyledHelpSidebar.Form>\n                )}\n            </StyledHelpSidebar.Content>\n        </HelpSidebarContainer>\n    )\n}\n\nexport default HelpSidebar\n","import HelpSidebar from './HelpSidebar/HelpSidebar'\n\nconst Composed = {\n    HelpSidebar\n}\n\nexport default Composed\n","import links from './links'\n\nconst homeUtils = {\n    links\n}\n\nexport default homeUtils\n","type Links = {\n    handleToggler: (dispatch: DispatchBoolean) => void\n    setShowLoginModal: DispatchBoolean\n    setShowHelpSidebar: DispatchBoolean\n}\n\nconst links = ({ handleToggler, setShowLoginModal, setShowHelpSidebar }: Links) => [\n    {\n        link: 'Indicators'\n    },\n    {\n        link: 'Login',\n        onClick: () => handleToggler(setShowLoginModal)\n    },\n    {\n        link: 'Help',\n        onClick: () => handleToggler(setShowHelpSidebar)\n    }\n]\n\nexport default links\n","import { useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport homeHooks from './hooks'\n\nimport Navbar from 'components/Shared/Navbar/Navbar'\nimport RegistrationModal from 'components/Guest/Modals/RegistrationModal/RegistrationModal'\nimport LoginModal from 'components/Guest/Modals/LoginModal/LoginModal'\n\nimport Dashboard from './styled/Dashboard'\n\nimport Composed from './composed'\n\nimport homeUtils from './utils'\n\nimport Logo from 'assets/images/Logo.png'\n\nconst HomeContainer = styled.section`\n    min-height: 100%;\n    padding: 85px 0px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: relative;\n    &::before {\n        content: '';\n        width: 100%;\n        height: 100%;\n        background: ${({ theme }) => theme.primaryColor};\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        clip-path: polygon(0 95%, 100% 80%, 100% 100%, 0% 100%);\n        @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n            clip-path: polygon(0 95%, 100% 85%, 100% 100%, 0% 100%);\n        }\n        @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n            clip-path: polygon(0 95%, 100% 88%, 100% 100%, 0% 100%);\n        }\n    }\n`\n\nconst Home = () => {\n    const [role, setRole] = useState<Role>('user')\n    const [showHelpSidebar, setShowHelpSidebar] = useState(false)\n    const [showRegistrationModal, setShowRegistrationModal] = useState(false)\n    const [showLoginModal, setShowLoginModal] = useState(false)\n    const { handleToggler } = homeHooks.useHelpers({\n        setShowLoginModal\n    })\n    const showLoginModalForAdmin = () => {\n        setRole('admin')\n        setShowLoginModal(true)\n    }\n    return (\n        <HomeContainer>\n            <Composed.HelpSidebar\n                showSidebar={showHelpSidebar}\n                toggleSidebar={() => handleToggler(setShowHelpSidebar)}\n                hideSidebar={() => setShowHelpSidebar(false)}\n                showLoginModal={() => setShowLoginModal(true)}\n            />\n            <RegistrationModal\n                showModal={showRegistrationModal}\n                toggleModal={() => handleToggler(setShowRegistrationModal)}\n            />\n            <LoginModal\n                role={role}\n                setRole={setRole}\n                showModal={showLoginModal}\n                toggleModal={() => handleToggler(setShowLoginModal)}\n            />\n            <Navbar\n                links={homeUtils.links({\n                    handleToggler,\n                    setShowLoginModal,\n                    setShowHelpSidebar\n                })}\n            />\n            <Dashboard.Advantages>\n                <Dashboard.Advantage>\n                    <Dashboard.Dollar>$</Dashboard.Dollar>\n                    Straightforward trading message - keep it simple.\n                </Dashboard.Advantage>\n                <Dashboard.Advantage>\n                    <Dashboard.Dollar>$</Dashboard.Dollar>\n                    Profitable either poor analysis? We don't care - trust the process!\n                </Dashboard.Advantage>\n                <Dashboard.Advantage>\n                    <Dashboard.Dollar>$</Dashboard.Dollar>\n                    Remember - it's a mental battle, not technical one.\n                </Dashboard.Advantage>\n                <Dashboard.Logo src={Logo} alt=\"evo4x\" mobile />\n                <Dashboard.Button\n                    onClick={() => handleToggler(setShowRegistrationModal)}\n                    $fill={showRegistrationModal}\n                >\n                    join evo4x's community\n                </Dashboard.Button>\n            </Dashboard.Advantages>\n            <Dashboard.Header>\n                <Dashboard.Logo src={Logo} alt=\"evo4x\" />\n            </Dashboard.Header>\n            <Dashboard.HiddenButton onDoubleClick={showLoginModalForAdmin} />\n        </HomeContainer>\n    )\n}\n\nexport default Home\n","import getProfile from './getProfile'\nimport updateProfile from './updateProfile'\nimport updateCachedProfile from './updateCachedProfile'\nimport updateCachedAvatar from './updateCachedAvatar'\nimport validateProfile from './validateProfile'\nimport changeAvatar from './changeAvatar'\nimport removeAvatar from './removeAvatar'\n\nconst profileHelpers = {\n    getProfile,\n    updateProfile,\n    updateCachedProfile,\n    updateCachedAvatar,\n    validateProfile,\n    changeAvatar,\n    removeAvatar\n}\n\nexport default profileHelpers\n","import utils from 'utils'\n\ntype ProfileGetter = {\n    setProfile: React.Dispatch<React.SetStateAction<ProfileForm>>\n    setAvatar: DispatchString\n}\n\nconst getProfile = async ({ setProfile, setAvatar }: ProfileGetter) => {\n    const loadCachedProfile = () => {\n        const profile = JSON.parse(sessionStorage.getItem('profile')!)\n        if (profile) {\n            const { name, story, avatar } = profile\n            setProfile(profile => ({\n                ...profile,\n                name,\n                story\n            }))\n            setAvatar(avatar)\n        }\n    }\n    try {\n        loadCachedProfile()\n        const url = '/api/user/profile/getProfile'\n        const response = await utils.axios.get(url)\n        if (response) {\n            const { name, story, avatar } = response.data\n            const profile = {\n                name,\n                story,\n                avatar\n            }\n            sessionStorage.setItem('profile', JSON.stringify(profile))\n            setProfile(profile => ({\n                ...profile,\n                name,\n                story\n            }))\n            setAvatar(avatar)\n        }\n    } catch (error) {\n        setAvatar(utils.defaultAvatar(''))\n    }\n}\n\nexport default getProfile\n","import utils from 'utils'\n\nimport profileHelpers from '.'\n\ntype ProfileUpdater = {\n    event: React.FormEvent\n    profile: ProfileForm\n    profileHandler: any\n    avatar: string\n    withDefaultAvatar: boolean\n    setProfile: React.Dispatch<React.SetStateAction<ProfileForm>>\n    setAvatar: DispatchString\n}\n\nconst updateProfile = async ({\n    event,\n    profile,\n    profileHandler,\n    avatar,\n    withDefaultAvatar,\n    setProfile,\n    setAvatar\n}: ProfileUpdater) => {\n    event.preventDefault()\n    if (\n        profileHelpers.validateProfile({\n            profile,\n            setProfile,\n            profileHandler\n        })\n    ) {\n        try {\n            const url = '/api/user/profile/updateProfile'\n            const { name, story } = profile\n            const updatedAvatar = withDefaultAvatar ? utils.defaultAvatar(name) : avatar\n            await utils.axios.post(url, {\n                name,\n                story,\n                avatar: updatedAvatar\n            })\n            const updatedProfile = {\n                name,\n                story,\n                avatar: updatedAvatar\n            }\n            profileHelpers.updateCachedProfile(updatedProfile)\n            setAvatar(updatedAvatar)\n        } catch (error) {\n            utils.handleApiValidation(error, setProfile)\n        }\n    }\n}\n\nexport default updateProfile\n","const updateCachedProfile = (profile: Profile) => {\n    sessionStorage.setItem('profile', JSON.stringify(profile))\n}\n\nexport default updateCachedProfile\n","import profileHelpers from '.'\n\nconst updateCachedAvatar = (avatar: string) => {\n    const profile = JSON.parse(sessionStorage.getItem('profile')!)\n    const updatedProfile = {\n        ...profile,\n        avatar\n    }\n    profileHelpers.updateCachedProfile(updatedProfile)\n}\nexport default updateCachedAvatar\n","type ProfileValidator = {\n    profile: ProfileForm\n    setProfile: React.Dispatch<React.SetStateAction<ProfileForm>>\n    profileHandler: any\n}\n\nconst validateProfile = ({ profile, setProfile, profileHandler }: ProfileValidator) => {\n    let validated = true\n    setProfile(profile => ({\n        ...profile,\n        nameError: '',\n        storyError: ''\n    }))\n    const { name } = profile\n    if (!profileHandler.validateProperty('name', name)) validated = false\n    return validated\n}\n\nexport default validateProfile\n","import utils from 'utils'\n\nimport profileHelpers from '.'\n\ntype AvatarChanger = {\n    event: React.ChangeEvent<HTMLInputElement>\n    setAvatar: DispatchString\n    setShowAvatarInput: DispatchBoolean\n}\n\ntype Response = {\n    avatar: string\n}\n\nconst changeAvatar = async ({ event, setAvatar, setShowAvatarInput }: AvatarChanger) => {\n    const file = event.currentTarget.files![0]\n    if (file) {\n        const { regex, sizes } = utils.filesInfo\n        const { name, size } = file\n        const isImage = regex.images.test(name)\n        const resetFileInput = () => {\n            setShowAvatarInput(false)\n            setShowAvatarInput(true)\n        }\n        if (!isImage) {\n            resetFileInput()\n            return utils.setApiFeedback('You cannot upload this file as an avatar')\n        }\n        if (isImage) {\n            if (size > sizes.imageMaxSize) {\n                resetFileInput()\n                return utils.setApiFeedback('You cannot upload this large file')\n            }\n        }\n        const form = new FormData()\n        form.append('file', file)\n        try {\n            const url = '/api/user/profile/changeAvatar'\n            const response = await utils.axios.post<Response>(url, form)\n            if (response) {\n                const { avatar } = response.data\n                profileHelpers.updateCachedAvatar(avatar)\n                setAvatar(avatar)\n                resetFileInput()\n            }\n        } catch (error) {\n            resetFileInput()\n        }\n    }\n}\n\nexport default changeAvatar\n","import utils from 'utils'\n\nimport profileHelpers from '.'\n\ntype AvatarRemover = {\n    setAvatar: DispatchString\n}\n\nconst removeAvatar = async ({ setAvatar }: AvatarRemover) => {\n    const url = '/api/user/profile/removeAvatar'\n    const response = await utils.axios.get(url)\n    if (response) {\n        const { avatar } = response.data\n        profileHelpers.updateCachedAvatar(avatar)\n        setAvatar(avatar)\n    }\n}\n\nexport default removeAvatar\n","import useProfile from './useProfile'\n\nconst profileHooks = {\n    useProfile\n}\n\nexport default profileHooks\n","import { useEffect, useState } from 'react'\n\nimport hooks from 'hooks'\n\nimport profileHelpers from '../helpers'\n\ntype ProfileHook = {\n    setShowAvatarInput: DispatchBoolean\n}\n\nconst useProfile = ({ setShowAvatarInput }: ProfileHook) => {\n    const [profile, setProfile] = useState({\n        name: '',\n        nameError: '',\n        story: '',\n        storyError: ''\n    })\n    const profileHandler = hooks.useFormHandler(setProfile)\n    const [avatar, setAvatar] = useState('')\n    useEffect(() => {\n        profileHelpers.getProfile({\n            setProfile,\n            setAvatar\n        })\n    }, [])\n    const withDefaultAvatar = avatar.includes('ui-avatars')\n    const updateProfile = (event: React.FormEvent) => {\n        profileHelpers.updateProfile({\n            event,\n            profile,\n            avatar,\n            withDefaultAvatar,\n            setProfile,\n            setAvatar,\n            profileHandler\n        })\n    }\n    const changeAvatar = (event: React.ChangeEvent<HTMLInputElement>) => {\n        profileHelpers.changeAvatar({\n            event,\n            setAvatar,\n            setShowAvatarInput\n        })\n    }\n    const removeAvatar = () => {\n        profileHelpers.removeAvatar({\n            setAvatar\n        })\n    }\n    return {\n        profile,\n        profileHandler,\n        avatar,\n        withDefaultAvatar,\n        updateProfile,\n        changeAvatar,\n        removeAvatar\n    }\n}\n\nexport default useProfile\n","import Content from './Content'\nimport Messages from './Messages'\nimport UnreadMessagesInfo from './UnreadMessagesInfo'\nimport FileInput from './FileInput'\nimport Warning from './Warning'\nimport Error from './Error'\n\nconst Dashboard = {\n    Content,\n    Messages,\n    UnreadMessagesInfo,\n    FileInput,\n    Warning,\n    Error\n}\n\nexport default Dashboard\n","import styled, { css } from 'styled-components/macro'\n\ntype Content = {\n    withAnalysis?: boolean\n}\n\nexport default styled.div<Content>`\n    width: 100%;\n    height: 100%;\n    padding: 0px 0px 20px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding: 0px 0px 20px 15px;\n    }\n    ${({ withAnalysis }) =>\n        withAnalysis\n            ? css`\n                  padding-bottom: 10px;\n                  @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n                      padding-bottom: 10px;\n                  }\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    width: 100%;\n    height: 100%;\n    padding-right: 10px;\n    overflow: auto;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    padding: 8px 15px;\n    background: ${({ theme }) => theme.primaryColor};\n    font-size: 12px;\n    font-weight: bold;\n    text-align: center;\n    box-shadow: 0px 0px 15px -10px black;\n    cursor: pointer;\n    border-radius: 10px;\n    position: absolute;\n    left: 50%;\n    top: 10px;\n    transform: translate(-50%, 0px);\n    z-index: 1;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        font-size: 10px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.input.attrs(() => ({\n    id: 'file',\n    type: 'file'\n}))`\n    width: 0px;\n    height: 0px;\n    opacity: 0;\n    position: absolute;\n    bottom: 0px;\n    z-index: -1;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.p`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    align-self: flex-end;\n    margin-right: 20px;\n    p {\n        max-width: 100%;\n        border-radius: 10px;\n        margin-top: 10px;\n        white-space: nowrap;\n    }\n`\n","import Content from './Content'\nimport AvatarContainer from './AvatarContainer'\nimport Avatar from './Avatar'\nimport Info from './Info'\nimport Buttons from './Buttons'\nimport Button from './Button'\n\nconst Dashboard = {\n    Content,\n    AvatarContainer,\n    Avatar,\n    Info,\n    Buttons,\n    Button\n}\n\nexport default Dashboard\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        flex-direction: column;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        order: 1;\n        margin-bottom: 40px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.img`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    object-fit: cover;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        width: 120px;\n        height: 120px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.form`\n    width: 400px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        order: 2;\n        width: 90%;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    margin-top: 20px;\n`\n","import styled from 'styled-components/macro'\n\nimport sharedStyled from 'components/Shared/styled'\n\nexport default styled(sharedStyled.Button)`\n    margin-top: 20px;\n    padding: 5px 20px;\n`\n","import { useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport profileHooks from './hooks'\n\nimport ApiFeedback from 'components/Shared/ApiFeedback/ApiFeedback'\n\nimport ChatDashboard from 'components/User/Chat/styled/Dashboard'\nimport Dashboard from './styled/Dashboard'\n\nimport RegistrationModalComposed from 'components/Guest/Modals/RegistrationModal/composed'\n\nconst ProfileContainer = styled.section`\n    min-height: 100%;\n    padding: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Profile = () => {\n    const [showAvatarInput, setShowAvatarInput] = useState(true)\n    const {\n        profile: { name, nameError, story, storyError },\n        profileHandler,\n        avatar,\n        withDefaultAvatar,\n        updateProfile,\n        changeAvatar,\n        removeAvatar\n    } = profileHooks.useProfile({\n        setShowAvatarInput\n    })\n    return (\n        <ProfileContainer>\n            <Dashboard.Content>\n                <Dashboard.Info onSubmit={updateProfile}>\n                    <RegistrationModalComposed.Input\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        label=\"Name\"\n                        value={name}\n                        placeholder=\"Type your name\"\n                        error={nameError}\n                        onChange={profileHandler.handleInputValue}\n                    />\n                    <RegistrationModalComposed.Input\n                        id=\"story\"\n                        name=\"story\"\n                        type=\"textarea\"\n                        label=\"About your trading\"\n                        value={story}\n                        placeholder=\"Type the story of your trading\"\n                        error={storyError}\n                        onChange={profileHandler.handleInputValue}\n                    />\n                    <Dashboard.Button>Update profile</Dashboard.Button>\n                    <ApiFeedback />\n                </Dashboard.Info>\n                <Dashboard.AvatarContainer>\n                    <Dashboard.Avatar src={avatar} />\n                    <Dashboard.Buttons>\n                        <Dashboard.Button as=\"label\" htmlFor=\"file\">\n                            Change avatar\n                        </Dashboard.Button>\n                        {!withDefaultAvatar && (\n                            <Dashboard.Button onClick={removeAvatar}>\n                                Remove avatar\n                            </Dashboard.Button>\n                        )}\n                    </Dashboard.Buttons>\n                    {showAvatarInput && <ChatDashboard.FileInput onChange={changeAvatar} />}\n                </Dashboard.AvatarContainer>\n            </Dashboard.Content>\n        </ProfileContainer>\n    )\n}\n\nexport default Profile\n","import handleOnSendMessage from './socket/handleOnSendMessage'\n\nimport getMessages from './getMessages'\nimport getUnreadMessages from './getUnreadMessages'\nimport sendMessage from './sendMessage'\nimport handleSubmittingTextarea from './handleSubmittingTextarea'\nimport sendFile from './sendFile'\nimport pushToTheBottom from './pushToTheBottom'\n\nconst chatHelpers = {\n    handleOnSendMessage,\n    getMessages,\n    getUnreadMessages,\n    sendMessage,\n    handleSubmittingTextarea,\n    sendFile,\n    pushToTheBottom\n}\n\nexport default chatHelpers\n","import { Socket } from 'socket.io-client'\n\nimport chatHelpers from '../../helpers'\n\ntype OnSendMessageHandler = {\n    socket: Socket | undefined\n    messagesRef: React.RefObject<HTMLDivElement>\n    message: Message\n    setMessages: React.Dispatch<React.SetStateAction<Message[]>>\n}\n\nconst handleOnSendMessage = ({\n    socket,\n    messagesRef,\n    message,\n    setMessages\n}: OnSendMessageHandler) => {\n    setMessages(messages => [...messages, message])\n    chatHelpers.pushToTheBottom(messagesRef)\n    socket!.emit('readMessages')\n}\n\nexport default handleOnSendMessage\n","import utils from 'utils'\n\nimport chatHelpers from '.'\n\ntype MessagesGetter = MessagesOrAnalysisGetterProps & {\n    messagesRef: React.RefObject<HTMLDivElement>\n    hasMoreMessages: boolean\n    lastUnreadMessageIndex: number | undefined\n    setMessages: React.Dispatch<React.SetStateAction<Message[]>>\n    setHasMoreMessages: DispatchBoolean\n    setIsLoading: DispatchBoolean\n    setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>\n    setUnreadMessagesAmount: any\n}\n\ntype Response = {\n    user: User\n    messages: Message[]\n}\n\nconst getMessages = async ({\n    event,\n    limit,\n    offset,\n    messagesRef,\n    hasMoreMessages,\n    lastUnreadMessageIndex,\n    setMessages,\n    setHasMoreMessages,\n    setIsLoading,\n    setCurrentUser,\n    setUnreadMessagesAmount\n}: MessagesGetter) => {\n    const loadCachedMessage = () => {\n        const currentUser = JSON.parse(sessionStorage.getItem('currentUser')!)\n        const savedMessages = JSON.parse(sessionStorage.getItem('messages')!)\n        if (savedMessages && currentUser) {\n            setIsLoading(false)\n            setCurrentUser(currentUser)\n            setMessages(savedMessages)\n            setTimeout(() => chatHelpers.pushToTheBottom(messagesRef, true), 0)\n        }\n    }\n    const url = '/api/user/communication/getMessages'\n    if (event) {\n        const target = event.target as any\n        if (target.scrollTop <= 0 && hasMoreMessages) {\n            const response = await utils.axios.post<Response>(url, {\n                limit,\n                offset\n            })\n            if (response) {\n                const { messages } = response.data\n                setHasMoreMessages(messages.length !== 0)\n                const lastScroll = target.scrollHeight\n                setMessages(_messages => [...messages, ..._messages])\n                target.scrollTop = target.scrollHeight - lastScroll\n                if (messages.length + messages.length >= lastUnreadMessageIndex!) {\n                    setUnreadMessagesAmount(0)\n                }\n            }\n        }\n    }\n    if (!event) {\n        loadCachedMessage()\n        const response = await utils.axios.post<Response>(url, {\n            limit,\n            offset\n        })\n        if (response) {\n            setIsLoading(false)\n            const { user, messages } = response.data\n            sessionStorage.setItem('currentUser', JSON.stringify(user))\n            sessionStorage.setItem('messages', JSON.stringify(messages))\n            setCurrentUser(user)\n            setMessages(messages)\n            chatHelpers.pushToTheBottom(messagesRef, true)\n            if (messages.length >= lastUnreadMessageIndex!) {\n                setUnreadMessagesAmount(0)\n            }\n        }\n    }\n}\n\nexport default getMessages\n","import utils from 'utils'\n\ntype UnreadMessagesGetter = {\n    messagesRef: React.RefObject<HTMLDivElement>\n    lastUnreadMessageIndex: number | undefined\n    setMessages: React.Dispatch<React.SetStateAction<Message[]>>\n    setUnreadMessagesAmount: any\n}\n\ntype Response = {\n    messages: Message[]\n}\n\nconst getUnreadMessages = async ({\n    messagesRef,\n    lastUnreadMessageIndex,\n    setMessages,\n    setUnreadMessagesAmount\n}: UnreadMessagesGetter) => {\n    const url = '/api/user/communication/getMessages'\n    const response = await utils.axios.post<Response>(url, {\n        limit: lastUnreadMessageIndex,\n        offset: 0\n    })\n    if (response) {\n        const { messages } = response.data\n        setMessages(messages)\n        setTimeout(() => {\n            messagesRef.current!.scrollTop = 0\n        }, 0)\n        setUnreadMessagesAmount(0)\n    }\n}\n\nexport default getUnreadMessages\n","import { Socket } from 'socket.io-client'\nimport axios from 'axios'\n\nimport utils from 'utils'\n\nimport chatHelpers from '.'\n\ntype MessageSender = {\n    socket: Socket | undefined\n    messagesRef: React.RefObject<HTMLDivElement>\n    messages: Message[]\n    message: string\n    currentUser: User | undefined\n    setMessage: DispatchString\n    setMessages: React.Dispatch<React.SetStateAction<Message[]>>\n}\n\nconst sendMessage = async ({\n    socket,\n    messagesRef,\n    messages,\n    message,\n    currentUser,\n    setMessage,\n    setMessages\n}: MessageSender) => {\n    if (message.trim()) {\n        const lastMessage = messages[messages.length - 1]\n        const id = lastMessage ? lastMessage.id + 1 : 0\n        const _message = {\n            id,\n            type: 'MESSAGE',\n            content: message,\n            createdAt: new Date(),\n            user: currentUser\n        }\n        setMessages(messages => [...messages, _message] as Message[])\n        chatHelpers.pushToTheBottom(messagesRef)\n        setTimeout(() => setMessage(''), 0)\n        try {\n            const url = '/api/user/communication/sendMessage'\n            const response = await axios.post(url, {\n                content: message\n            })\n            if (response) {\n                socket!.emit('sendMessage', _message)\n            }\n        } catch (error) {\n            utils.handleApiError(error)\n            const conversation = messages\n            setMessages(conversation)\n        }\n    }\n}\n\nexport default sendMessage\n","import utils from 'utils'\n\ntype SubmittingTextareaHandler = {\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n    sendMessage: () => void\n}\n\nconst handleSubmittingTextarea = ({ event, sendMessage }: SubmittingTextareaHandler) => {\n    if (event.key === 'Enter') {\n        switch (true) {\n            case utils.detectMobileDevice():\n                return\n            case !event.currentTarget.value.trim():\n                event.preventDefault()\n                break\n            case !event.shiftKey:\n                sendMessage()\n                break\n        }\n    }\n}\n\nexport default handleSubmittingTextarea\n","import { Socket } from 'socket.io-client'\nimport axios from 'axios'\n\nimport utils from 'utils'\n\nimport chatHelpers from '.'\n\ntype FileSender = {\n    event: React.ChangeEvent<HTMLInputElement>\n    socket: Socket | undefined\n    messagesRef: React.RefObject<HTMLDivElement>\n    messages: Message[]\n    currentUser: User | undefined\n    setMessages: React.Dispatch<React.SetStateAction<Message[]>>\n    setShowFileInput: DispatchBoolean\n    setUploadPercentage: DispatchNumber\n}\n\ntype Response = {\n    type: string\n    content: string\n}\n\nconst sendFile = async ({\n    event,\n    socket,\n    messagesRef,\n    messages,\n    currentUser,\n    setMessages,\n    setShowFileInput,\n    setUploadPercentage\n}: FileSender) => {\n    let intervalId: any\n    let percentage = 0\n    const file = event.currentTarget.files![0]\n    if (file) {\n        const { regex, sizes } = utils.filesInfo\n        const { name, size } = file\n        const isImage = regex.images.test(name)\n        const isVideo = regex.videos.test(name)\n        const isFile = regex.files.test(name)\n        const resetFileInput = () => {\n            setShowFileInput(false)\n            setTimeout(() => setShowFileInput(true), 0)\n        }\n        const largeSizeError = () => {\n            return utils.setApiFeedback('You cannot send this large file')\n        }\n        if (!isImage && !isVideo && !isFile) {\n            resetFileInput()\n            return utils.setApiFeedback('You cannot send a file with this extension')\n        }\n        if (isImage) {\n            if (size > sizes.imageMaxSize) {\n                resetFileInput()\n                largeSizeError()\n            }\n        }\n        if (isVideo) {\n            if (size > sizes.maxVideoSize) {\n                resetFileInput()\n                largeSizeError()\n            }\n        }\n        if (isFile) {\n            if (size > sizes.maxFileSize) {\n                resetFileInput()\n                largeSizeError()\n            }\n        }\n        const form = new FormData()\n        form.append('file', file)\n        try {\n            const url = '/api/user/communication/sendFile'\n            intervalId = setInterval(() => {\n                if (percentage < 100) {\n                    percentage++\n                    setUploadPercentage(percentage => percentage + 1)\n                }\n            }, 500)\n            const response = await axios.post<Response>(url, form)\n            if (response) {\n                setUploadPercentage(100)\n                clearInterval(intervalId)\n                setTimeout(() => setUploadPercentage(0), 800)\n                const { type, content } = response.data\n                const lastMessage = messages[messages.length - 1]\n                const id = lastMessage ? lastMessage.id + 1 : 0\n                const message = {\n                    id,\n                    type,\n                    content,\n                    filename: name,\n                    createdAt: new Date(),\n                    user: currentUser\n                }\n                setMessages([...messages, message] as Message[])\n                chatHelpers.pushToTheBottom(messagesRef)\n                resetFileInput()\n                socket!.emit('sendMessage', message)\n            }\n        } catch (error) {\n            utils.handleApiError(error)\n            resetFileInput()\n            clearInterval(intervalId)\n            setUploadPercentage(0)\n        }\n    }\n}\n\nexport default sendFile\n","import React from 'react'\n\nconst pushToTheBottom = (ref: React.RefObject<HTMLDivElement>, withoutDelay?: boolean) => {\n    if (ref.current) {\n        if (withoutDelay) {\n            ref.current.scrollTop = ref.current.scrollHeight\n        } else {\n            setTimeout(() => {\n                ref.current!.scrollTop = ref.current!.scrollHeight\n            }, 0)\n        }\n    }\n}\n\nexport default pushToTheBottom\n","import useChat from './useChat'\n\nconst chatHooks = {\n    useChat\n}\n\nexport default chatHooks\n","import { useRef, useEffect, useState } from 'react'\n\nimport hooks from 'hooks'\n\nimport utils from 'utils'\n\nimport chatHelpers from '../helpers'\n\ntype ChatHook = {\n    setShowFileInput: DispatchBoolean\n    setUploadPercentage: DispatchNumber\n}\n\nconst useChat = ({ setShowFileInput, setUploadPercentage }: ChatHook) => {\n    const { socket } = hooks.useSocket()\n    const { lastUnreadMessageIndex, setUnreadMessagesAmount } = hooks.useMessagesInfo()\n    const messagesRef = useRef<HTMLDivElement>(null)\n    const [messages, setMessages] = useState<Message[]>([])\n    const [message, setMessage] = useState('')\n    const [hasMoreMessages, setHasMoreMessages] = useState(true)\n    const [isLoading, setIsLoading] = useState(true)\n    const [currentUser, setCurrentUser] = useState<User | undefined>()\n    const handleOnSendMessage = (message: Message) => {\n        chatHelpers.handleOnSendMessage({\n            socket,\n            messagesRef,\n            message,\n            setMessages\n        })\n    }\n    useEffect(() => {\n        if (socket) {\n            socket.on('sendMessage', handleOnSendMessage)\n        }\n        return () => {\n            if (socket) {\n                socket.off('sendMessage', handleOnSendMessage)\n            }\n        }\n    }, [socket])\n    const getMessages = async ({ event, limit, offset }: MessagesOrAnalysisGetterProps) => {\n        chatHelpers.getMessages({\n            event,\n            limit,\n            offset,\n            messagesRef,\n            hasMoreMessages,\n            lastUnreadMessageIndex,\n            setMessages,\n            setHasMoreMessages,\n            setIsLoading,\n            setCurrentUser,\n            setUnreadMessagesAmount\n        })\n    }\n    useEffect(() => {\n        getMessages({\n            event: undefined,\n            limit: 20,\n            offset: 0\n        })\n        utils.subscribePushNotifications('/api/user/communication/subscribePushNotifications')\n    }, [])\n    const getUnreadMessages = () => {\n        chatHelpers.getUnreadMessages({\n            messagesRef,\n            lastUnreadMessageIndex,\n            setMessages,\n            setUnreadMessagesAmount\n        })\n    }\n    const sendMessage = () => {\n        chatHelpers.sendMessage({\n            socket,\n            messagesRef,\n            messages,\n            message,\n            currentUser,\n            setMessage,\n            setMessages\n        })\n    }\n    const handleSubmittingTextarea = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        chatHelpers.handleSubmittingTextarea({\n            event,\n            sendMessage\n        })\n    }\n    const sendFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n        chatHelpers.sendFile({\n            event,\n            socket,\n            messagesRef,\n            messages,\n            currentUser,\n            setMessages,\n            setShowFileInput,\n            setUploadPercentage\n        })\n    }\n    return {\n        messagesRef,\n        messages,\n        message,\n        isLoading,\n        currentUser,\n        setMessage,\n        getMessages,\n        getUnreadMessages,\n        sendMessage,\n        handleSubmittingTextarea,\n        sendFile\n    }\n}\n\nexport default useChat\n","import Container from './Container'\nimport Content from './Content'\nimport Buttons from './Buttons'\nimport Button from './Button'\n\nconst StyledTextarea = {\n    Container,\n    Content,\n    Buttons,\n    Button\n}\n\nexport default StyledTextarea\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    width: calc(100% - 20px);\n    height: 80px;\n    background: ${({ theme }) => theme.primaryColor};\n    border-radius: 10px;\n    margin-top: 10px;\n    margin-right: 20px;\n    border: 1px solid black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.textarea`\n    width: 100%;\n    height: 100%;\n    padding: 10px 15px;\n    background: transparent;\n    font-size: 14px;\n    border: none;\n    resize: none;\n    ::-webkit-scrollbar {\n        display: none;\n    }\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding: 8px 10px;\n        font-size: 12px;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import styled from 'styled-components/macro'\n\nimport sharedStyled from 'components/Shared/styled'\n\nexport default styled(sharedStyled.Button)`\n    padding: 8px 10px;\n    margin-right: 15px;\n    background: none;\n    border: 1px solid black;\n    white-space: nowrap;\n    color: black;\n    cursor: pointer;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding: 6px 8px;\n        margin-right: 10px;\n        font-size: 11px;\n    }\n`\n","import AssetContainer from './AssetContainer'\nimport Content from './Content'\nimport Avatar from './Avatar'\nimport Image from './Image'\nimport Video from './Video'\nimport Date from './Date'\n\nconst StyledMessage = {\n    AssetContainer,\n    Content,\n    Avatar,\n    Image,\n    Video,\n    Date\n}\n\nexport default StyledMessage\n","import styled, { css } from 'styled-components/macro'\n\ntype AssetContainer = {\n    withCurrentUser: boolean\n}\n\nexport default styled.div<AssetContainer>`\n    min-height: 40px;\n    margin-bottom: 10px;\n    border-radius: 12px;\n    background: ${({ theme }) => theme.primaryColor};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: flex-start;\n    position: relative;\n    ${({ withCurrentUser }) =>\n        withCurrentUser\n            ? css`\n                  align-self: flex-end;\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Content = {\n    withCurrentUser: boolean\n    withLastUserMessage: boolean\n    withFile?: boolean\n    withError?: boolean\n}\n\nexport default styled.div<Content>`\n    width: max-content;\n    max-width: 70%;\n    padding: 8px 15px;\n    margin-bottom: 10px;\n    border: 1px solid black;\n    background: ${({ theme }) => theme.primaryColor};\n    font-size: 15px;\n    border-radius: 12px;\n    white-space: pre-line;\n    cursor: pointer;\n    color: black;\n    position: relative;\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        font-size: 14px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        font-size: 13px;\n    }\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        padding: 7px 12px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        font-size: 12px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        font-size: 11px;\n    }\n    ${({ withCurrentUser }) =>\n        withCurrentUser\n            ? css`\n                  align-self: flex-end;\n              `\n            : null}\n    ${({ withCurrentUser, withLastUserMessage }) =>\n        withLastUserMessage\n            ? withCurrentUser\n                ? css`\n                      border-bottom-left-radius: 2px;\n                  `\n                : css`\n                      border-bottom-right-radius: 2px;\n                  `\n            : null}\n    ${({ withFile }) =>\n        withFile\n            ? css`\n                  font-weight: bold;\n                  cursor: pointer;\n              `\n            : null}\n    ${({ withError }) =>\n        withError\n            ? css`\n                  font-weight: bold;\n              `\n            : null}\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Avatar = {\n    src: string\n    name: string\n    withCurrentUser: boolean\n}\n\nexport default styled.div<Avatar>`\n    width: 40px;\n    height: 40px;\n    margin-left: 15px;\n    background: ${({ src }) => `url(${src})`} no-repeat center center;\n    background-size: 100% 100%;\n    font-size: 16px;\n    border-radius: 50%;\n    color: black;\n    font-weight: bold;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    bottom: -2px;\n    right: -50px;\n    &::before {\n        max-width: 50px;\n        border-radius: 5px;\n        cursor: initial;\n        content: ${({ name }) => `'${name}'`};\n        font-size: 10px;\n        opacity: 0;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        overflow: hidden;\n        font-weight: initial;\n        position: absolute;\n        top: 50%;\n        left: calc(100% + 10px);\n        transform: translate(0px, -50%);\n        transition: opacity ease-in-out 0.5s;\n    }\n    &:hover {\n        &::before {\n            opacity: 1;\n        }\n    }\n    @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n        width: 37px;\n        height: 37px;\n        font-size: 15px;\n        right: -47px;\n    }\n    @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n        width: 34px;\n        height: 34px;\n        font-size: 14px;\n        right: -44px;\n    }\n    @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n        width: 31px;\n        height: 31px;\n        font-size: 13px;\n        right: -41px;\n    }\n    @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n        width: 28px;\n        height: 28px;\n        font-size: 12px;\n        right: -38px;\n    }\n    ${({ withCurrentUser }) =>\n        withCurrentUser\n            ? css`\n                  left: -65px;\n                  &::before {\n                      left: auto;\n                      right: calc(100% + 10px);\n                  }\n                  @media (max-width: ${({ theme }) => theme.firstBreakpoint}) {\n                      left: -62px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.secondBreakpoint}) {\n                      left: -59px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.thirdBreakpoint}) {\n                      left: -56px;\n                  }\n                  @media (max-width: ${({ theme }) => theme.fourthBreakpoint}) {\n                      left: -53px;\n                  }\n              `\n            : null}\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.img`\n    max-width: 100%;\n    height: 350px;\n    border: 1px solid black;\n    border-radius: 10px;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        max-width: 75vw;\n        height: 35vh;\n    }\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.video`\n    max-width: 100%;\n    height: 400px;\n    border: 1px solid black;\n    border-radius: 10px;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        max-width: 75vw;\n        height: 50vh;\n    }\n`\n","import styled, { css } from 'styled-components/macro'\n\ntype Date = {\n    withCurrentUser: boolean\n    withLastUserMessage: boolean\n    showDetails: boolean\n}\n\nexport default styled.div<Date>`\n    width: 100%;\n    font-size: 12px;\n    text-align: left;\n    font-weight: bold;\n    white-space: nowrap;\n    @media (max-width: ${({ theme }) => theme.additionalBreakpoint}) {\n        font-size: 10px;\n    }\n    ${({ withCurrentUser }) =>\n        withCurrentUser\n            ? css`\n                  text-align: right;\n              `\n            : null}\n    ${({ withLastUserMessage, showDetails }) =>\n        !withLastUserMessage && showDetails\n            ? css`\n                  margin-bottom: 10px;\n              `\n            : null}\n`\n","import React from 'react'\n\nimport StyledMessage from '../styled/Message'\n\nimport Composed from '.'\n\nimport utils from 'utils'\n\ninterface IMessageContainer {\n    message: Message\n    nextMessage: Message\n    currentUser: User | undefined\n}\n\nconst MessageContainer: React.FC<IMessageContainer> = ({\n    message: { type, content, filename, createdAt, user },\n    nextMessage,\n    currentUser\n}) => {\n    const withCurrentUser = user.id === currentUser?.id\n    const withLastUserMessage = (nextMessage && user.id !== nextMessage.user.id) || !nextMessage\n    const showAvatar = () => (\n        <StyledMessage.Avatar\n            src={user.profile!.avatar}\n            onDoubleClick={() => utils.history.push(`/users/${user.id}`)}\n            name={user.profile!.name}\n            withCurrentUser={withCurrentUser}\n        />\n    )\n    const showError = (error: string) => (\n        <StyledMessage.Content\n            withCurrentUser={withCurrentUser}\n            withLastUserMessage={withLastUserMessage}\n            withError\n        >\n            {error}\n            {withLastUserMessage && showAvatar()}\n        </StyledMessage.Content>\n    )\n    return (\n        <Composed.Message\n            type={type}\n            content={content}\n            filename={filename}\n            createdAt={createdAt}\n            showAvatar={showAvatar}\n            showError={showError}\n            withCurrentUser={withCurrentUser}\n            withLastUserMessage={withLastUserMessage}\n            withLastAndNextMessage={!!withLastUserMessage && !!nextMessage}\n        />\n    )\n}\n\nexport default MessageContainer\n","import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport fileSaver from 'file-saver'\n\nimport StyledMessage from '../styled/Message'\n\ntype MessageContainerType = {\n    withLastUserMessage: boolean\n}\n\nconst MessageContainer = styled.div<MessageContainerType>`\n    display: flex;\n    flex-direction: column;\n    ${({ withLastUserMessage }) =>\n        withLastUserMessage\n            ? css`\n                  margin-bottom: 15px;\n              `\n            : null}\n`\n\ninterface IMessage {\n    type: MessageTypes\n    content: string\n    filename: string | undefined\n    createdAt: Date\n    views?: number\n    showAvatar?: () => JSX.Element\n    showError: (error: string) => JSX.Element\n    withCurrentUser: boolean\n    withLastUserMessage: boolean\n    withLastAndNextMessage: boolean\n}\n\nconst Message: React.FC<IMessage> = ({\n    type,\n    content,\n    filename,\n    createdAt,\n    views,\n    showAvatar,\n    showError,\n    withCurrentUser,\n    withLastUserMessage,\n    withLastAndNextMessage\n}) => {\n    const [showDetails, setShowDetails] = useState(false)\n    const [imageError, setImageError] = useState(false)\n    const [videoError, setVideoError] = useState(false)\n    useEffect(() => {\n        if (showDetails) {\n            setTimeout(() => setShowDetails(false), 3000)\n        }\n    }, [showDetails])\n    const handleFileLoadingError = () => {\n        type === 'IMAGE' ? setImageError(true) : setVideoError(true)\n    }\n    const date = new Date(createdAt)\n    const withFile = type === 'FILE'\n    return (\n        <MessageContainer\n            onClick={() => setShowDetails(true)}\n            withLastUserMessage={withLastAndNextMessage}\n        >\n            {type === 'IMAGE' ? (\n                imageError ? (\n                    showError('Image has failed to load')\n                ) : (\n                    <StyledMessage.AssetContainer withCurrentUser={withCurrentUser}>\n                        <StyledMessage.Image src={content} onError={handleFileLoadingError} />\n                        {withLastUserMessage && showAvatar && showAvatar()}\n                    </StyledMessage.AssetContainer>\n                )\n            ) : type === 'VIDEO' ? (\n                videoError ? (\n                    showError('Video has failed to load')\n                ) : (\n                    <StyledMessage.AssetContainer withCurrentUser={withCurrentUser}>\n                        <StyledMessage.Video\n                            src={content}\n                            onError={handleFileLoadingError}\n                            controls\n                        />\n                        {withLastUserMessage && showAvatar && showAvatar()}\n                    </StyledMessage.AssetContainer>\n                )\n            ) : (\n                <StyledMessage.Content\n                    onClick={() => {\n                        if (withFile) {\n                            fileSaver.saveAs(content, filename)\n                        }\n                    }}\n                    withCurrentUser={withCurrentUser}\n                    withLastUserMessage={withLastUserMessage}\n                    withFile={withFile}\n                >\n                    {withFile ? filename : content}\n                    {withLastUserMessage && showAvatar && showAvatar()}\n                </StyledMessage.Content>\n            )}\n            {(withLastUserMessage || showDetails) && (\n                <StyledMessage.Date\n                    withCurrentUser={withCurrentUser}\n                    withLastUserMessage={withLastUserMessage}\n                    showDetails={showDetails}\n                >\n                    {new Date().toDateString() === date.toDateString()\n                        ? date.toLocaleTimeString()\n                        : date.toLocaleString()}\n                    {views && `, ${views}👁️`}\n                </StyledMessage.Date>\n            )}\n        </MessageContainer>\n    )\n}\n\nexport default Message\n","import styled from 'styled-components/macro'\n\ntype RingsContainer = {\n    dimension: number\n}\n\nexport default styled.div<RingsContainer>`\n    width: ${({ dimension }) => dimension}px;\n    height: ${({ dimension }) => dimension}px;\n    position: relative;\n`\n","import RingsContainer from './RingsContainer'\nimport Rings from './Rings'\nimport Ring from './Ring'\nimport Percentage from './Percentage'\n\nconst StyledProgressLoader = {\n    Rings,\n    RingsContainer,\n    Ring,\n    Percentage\n}\n\nexport default StyledProgressLoader\n","import styled from 'styled-components/macro'\n\ntype Rings = {\n    dimension: number\n}\n\nexport default styled.svg<Rings>`\n    width: ${({ dimension }) => dimension}px;\n    height: ${({ dimension }) => dimension}px;\n    stroke-width: 2;\n    stroke: black;\n    fill: transparent;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.circle`\n    transition: 0.8s stroke-dashoffset;\n    transform: rotate(-90deg);\n    transform-origin: 50% 50%;\n`\n","import styled from 'styled-components/macro'\n\nexport default styled.p`\n    font-size: 12px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media (max-width: 800px) {\n        font-size: 9px;\n    }\n`\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components/macro'\n\nimport StyledProgressLoader from '../styled/ProgressLoader'\n\nconst ProgressLoaderContainer = styled.div`\n    margin-right: 10px;\n    display: flex;\n    flex-direction: column;\n`\n\ninterface IProgressLoader {\n    percentage: number\n}\n\nconst ProgressLoader: React.FC<IProgressLoader> = ({ percentage }) => {\n    const circle = useRef<SVGCircleElement>(null)\n    const dimension = 50\n    const strokeWidth = 2\n    const radius = dimension / 2 - strokeWidth * 2\n    useEffect(() => {\n        if (circle) {\n            const radius = circle.current!.r.baseVal.value\n            const circumference = radius * 2 * Math.PI\n            circle.current!.style.strokeDasharray = `${circumference} ${circumference}`\n            const offset = circumference - (percentage / 100) * circumference\n            circle.current!.style.strokeDashoffset = offset.toString()\n        }\n    }, [percentage])\n    return (\n        <ProgressLoaderContainer>\n            <StyledProgressLoader.RingsContainer dimension={dimension}>\n                <StyledProgressLoader.Rings dimension={dimension}>\n                    <StyledProgressLoader.Ring\n                        ref={circle}\n                        r={radius}\n                        cx={dimension / 2}\n                        cy={dimension / 2}\n                        strokeDashoffset={radius * 2 * Math.PI}\n                    />\n                    <StyledProgressLoader.Ring\n                        strokeOpacity=\"0.3\"\n                        r={radius}\n                        cx={dimension / 2}\n                        cy={dimension / 2}\n                    />\n                </StyledProgressLoader.Rings>\n                <StyledProgressLoader.Percentage>\n                    {percentage.toFixed(0)}%\n                </StyledProgressLoader.Percentage>\n            </StyledProgressLoader.RingsContainer>\n        </ProgressLoaderContainer>\n    )\n}\n\nexport default ProgressLoader\n","import MessageContainer from './MessageContainer'\nimport Message from './Message'\nimport ProgressLoader from './ProgressLoader'\n\nconst Composed = {\n    MessageContainer,\n    Message,\n    ProgressLoader\n}\n\nexport default Composed\n","import { useRef, useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport hooks from 'hooks'\nimport chatHooks from './hooks'\n\nimport ApiFeedback from 'components/Shared/ApiFeedback/ApiFeedback'\n\nimport Dashboard from './styled/Dashboard'\nimport StyledTextarea from './styled/Textarea'\n\nimport Composed from './composed'\n\nimport utils from 'utils'\n\nconst ChatContainer = styled.section`\n    height: 100%;\n    position: relative;\n`\n\nconst Chat = () => {\n    const { lastUnreadMessageIndex } = hooks.useMessagesInfo()\n    const textareaRef = useRef<HTMLTextAreaElement>(null)\n    const [showFileInput, setShowFileInput] = useState(true)\n    const [uploadPercentage, setUploadPercentage] = useState(0)\n    const {\n        messagesRef,\n        messages,\n        message,\n        isLoading,\n        currentUser,\n        setMessage,\n        getMessages,\n        getUnreadMessages,\n        sendMessage,\n        handleSubmittingTextarea,\n        sendFile\n    } = chatHooks.useChat({\n        setShowFileInput,\n        setUploadPercentage\n    })\n    const renderMessages = () => {\n        return messages.map((message, index) => {\n            const nextMessage = messages[index + 1]\n            return (\n                <Composed.MessageContainer\n                    key={message.id}\n                    message={message}\n                    nextMessage={nextMessage}\n                    currentUser={currentUser}\n                />\n            )\n        })\n    }\n    const areThereMessages = !!messages.length\n    const areThereUnreadMessages =\n        !isLoading && lastUnreadMessageIndex && messages.length < lastUnreadMessageIndex\n    const fileUploadInProgress = !!uploadPercentage\n    return (\n        <ChatContainer>\n            {areThereUnreadMessages && (\n                <Dashboard.UnreadMessagesInfo onClick={getUnreadMessages}>\n                    Unread messages\n                </Dashboard.UnreadMessagesInfo>\n            )}\n            <Dashboard.Content>\n                <Dashboard.Messages\n                    ref={messagesRef}\n                    onTouchStart={() => textareaRef.current && textareaRef.current.blur()}\n                    onScroll={event =>\n                        getMessages({\n                            event,\n                            limit: 20,\n                            offset: messages.length\n                        })\n                    }\n                >\n                    {!isLoading &&\n                        (areThereMessages ? (\n                            renderMessages()\n                        ) : (\n                            <Dashboard.Warning>There are no messages yet</Dashboard.Warning>\n                        ))}\n                </Dashboard.Messages>\n                <Dashboard.Error>\n                    <ApiFeedback />\n                </Dashboard.Error>\n                <StyledTextarea.Container>\n                    <StyledTextarea.Content\n                        ref={textareaRef}\n                        value={message}\n                        placeholder=\"Type your message\"\n                        disabled={fileUploadInProgress}\n                        onChange={e => setMessage(e.target.value)}\n                        onKeyPress={handleSubmittingTextarea}\n                    />\n                    <StyledTextarea.Buttons>\n                        {showFileInput && <Dashboard.FileInput onChange={sendFile} />}\n                        {fileUploadInProgress ? (\n                            <Composed.ProgressLoader percentage={uploadPercentage} />\n                        ) : (\n                            <StyledTextarea.Button as=\"label\" htmlFor=\"file\">\n                                Upload 📁\n                            </StyledTextarea.Button>\n                        )}\n                        <StyledTextarea.Button\n                            onClick={() => {\n                                sendMessage()\n                                if (utils.detectMobileDevice()) {\n                                    textareaRef.current!.focus()\n                                }\n                            }}\n                        >\n                            Send ✉️\n                        </StyledTextarea.Button>\n                    </StyledTextarea.Buttons>\n                </StyledTextarea.Container>\n            </Dashboard.Content>\n        </ChatContainer>\n    )\n}\n\nexport default Chat\n","import getAnalysis from './getAnalysis'\n\nconst analysisHelpers = {\n    getAnalysis\n}\n\nexport default analysisHelpers\n","import utils from 'utils'\n\nimport chatHelpers from 'components/User/Chat/helpers'\n\ntype AnalysisGetter = MessagesOrAnalysisGetterProps & {\n    analysisRef: React.RefObject<HTMLDivElement>\n    setAnalysis: React.Dispatch<React.SetStateAction<Analysis[]>>\n    hasMoreAnalysis: boolean\n    setHasMoreAnalysis: DispatchBoolean\n}\n\ntype Response = {\n    analysis: Analysis[]\n}\n\nconst getAnalysis = async ({\n    event,\n    limit,\n    offset,\n    analysisRef,\n    setAnalysis,\n    hasMoreAnalysis,\n    setHasMoreAnalysis\n}: AnalysisGetter) => {\n    const loadCachedAnalysis = () => {\n        const savedAnalysis = JSON.parse(sessionStorage.getItem('analysis')!)\n        if (savedAnalysis && !!savedAnalysis.length) {\n            setAnalysis(savedAnalysis)\n            setTimeout(() => chatHelpers.pushToTheBottom(analysisRef, true), 0)\n        }\n    }\n    const url = '/api/user/communication/getAnalysis'\n    if (event) {\n        const target = event.target as any\n        if (target.scrollTop <= 0 && hasMoreAnalysis) {\n            const response = await utils.axios.post<Response>(url, {\n                limit,\n                offset\n            })\n            if (response) {\n                const { analysis } = response.data\n                setHasMoreAnalysis(analysis.length !== 0)\n                const lastScroll = target.scrollHeight\n                setAnalysis(_analysis => [...analysis, ..._analysis])\n                target.scrollTop = target.scrollHeight - lastScroll\n            }\n        }\n    }\n    if (!event) {\n        loadCachedAnalysis()\n        const response = await utils.axios.post<Response>(url, {\n            limit,\n            offset\n        })\n        if (response) {\n            const { analysis } = response.data\n            sessionStorage.setItem('analysis', JSON.stringify(analysis))\n            setAnalysis(analysis)\n            chatHelpers.pushToTheBottom(analysisRef)\n        }\n    }\n}\n\nexport default getAnalysis\n","import useAnalysis from './useAnalysis'\n\nconst analysisHooks = {\n    useAnalysis\n}\n\nexport default analysisHooks\n","import { useRef, useEffect, useState } from 'react'\n\nimport analysisHelpers from '../helpers'\n\nconst useAnalysis = () => {\n    const analysisRef = useRef<HTMLDivElement>(null)\n    const [analysis, setAnalysis] = useState<Analysis[]>([])\n    const [hasMoreAnalysis, setHasMoreAnalysis] = useState(true)\n    const getAnalysis = ({ event, limit, offset }: MessagesOrAnalysisGetterProps) => {\n        analysisHelpers.getAnalysis({\n            event,\n            limit,\n            offset,\n            analysisRef,\n            setAnalysis,\n            hasMoreAnalysis,\n            setHasMoreAnalysis\n        })\n    }\n    useEffect(() => {\n        getAnalysis({\n            event: undefined,\n            limit: 20,\n            offset: 0\n        })\n    }, [])\n    return {\n        analysisRef,\n        analysis,\n        getAnalysis\n    }\n}\n\nexport default useAnalysis\n","import Analysis from './Analysis'\n\nconst Composed = {\n    Analysis\n}\n\nexport default Composed\n","import React from 'react'\n\nimport ChatStyledMessage from 'components/User/Chat/styled/Message'\n\nimport ChatComposed from 'components/User/Chat/composed'\n\ninterface IAnalysis {\n    analysis: Analysis\n    nextAnalysis: Analysis\n}\n\nconst Analysis: React.FC<IAnalysis> = ({\n    analysis: { type, content, filename, createdAt, views },\n    nextAnalysis\n}) => {\n    const withLastUserMessage = !nextAnalysis\n    const showError = (error: string) => (\n        <ChatStyledMessage.Content\n            withCurrentUser\n            withLastUserMessage={withLastUserMessage}\n            withError\n        >\n            {error}\n        </ChatStyledMessage.Content>\n    )\n    return (\n        <ChatComposed.Message\n            type={type}\n            content={content}\n            filename={filename}\n            createdAt={createdAt}\n            views={views}\n            showError={showError}\n            withCurrentUser={true}\n            withLastUserMessage={withLastUserMessage}\n            withLastAndNextMessage={!!withLastUserMessage && !!nextAnalysis}\n        />\n    )\n}\n\nexport default Analysis\n","import styled from 'styled-components/macro'\n\nimport analysisHooks from './hooks'\n\nimport ChatDashboard from 'components/User/Chat/styled/Dashboard'\n\nimport Composed from './composed'\n\nconst AnalysisContainer = styled.section`\n    height: 100%;\n`\nconst Analysis = () => {\n    const { analysisRef, analysis, getAnalysis } = analysisHooks.useAnalysis()\n    const renderAnalysis = () => {\n        return analysis.map((currentAnalysis, index) => {\n            const nextAnalysis = analysis[index + 1]\n            return (\n                <Composed.Analysis\n                    key={currentAnalysis.id}\n                    analysis={currentAnalysis}\n                    nextAnalysis={nextAnalysis}\n                />\n            )\n        })\n    }\n    const areThereAnalysis = !!analysis.length\n    return (\n        <AnalysisContainer>\n            <ChatDashboard.Content withAnalysis>\n                <ChatDashboard.Messages\n                    ref={analysisRef}\n                    onScroll={event =>\n                        getAnalysis({\n                            event,\n                            limit: 20,\n                            offset: analysis.length\n                        })\n                    }\n                >\n                    {areThereAnalysis ? (\n                        renderAnalysis()\n                    ) : (\n                        <ChatDashboard.Warning>There are no analysis yet</ChatDashboard.Warning>\n                    )}\n                </ChatDashboard.Messages>\n            </ChatDashboard.Content>\n        </AnalysisContainer>\n    )\n}\n\nexport default Analysis\n","import { useEffect } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport axios from 'axios'\n\nimport { Guest, Admin, User } from 'components/Shared/Roles'\nimport Loader from 'components/Shared/Loader/Loader'\n\nimport AdminAnalysis from 'components/Admin/Analysis/Analysis'\nimport Home from 'components/Guest/Home/Home'\nimport Profile from 'components/User/Profile/Profile'\nimport Chat from 'components/User/Chat/Chat'\nimport Analysis from 'components/User/Analysis/Analysis'\n\nimport utils from 'utils'\n\nconst AppContainer = styled.main`\n    height: 100%;\n`\n\nconst App = () => {\n    useEffect(() => {\n        const checkRole = async () => {\n            try {\n                const url = '/api/global/auth/checkRole'\n                const response = await axios.get(url)\n                if (response) {\n                    const { role } = response.data\n                    utils.setRole(role)\n                }\n            } catch (error) {\n                utils.handleApiError(error)\n            }\n        }\n        checkRole()\n    }, [])\n    const routes = [\n        {\n            id: 1,\n            pathname: '/',\n            render: () => (\n                <Guest>\n                    <Home />\n                </Guest>\n            )\n        },\n        {\n            id: 2,\n            pathname: '/user/profile',\n            render: () => (\n                <User>\n                    <Profile />\n                </User>\n            )\n        },\n        {\n            id: 3,\n            pathname: '/users/:id',\n            render: () => (\n                <User>\n                    <Profile />\n                </User>\n            )\n        },\n        {\n            id: 4,\n            pathname: '/user/chat',\n            render: () => (\n                <User chat>\n                    <Chat />\n                </User>\n            )\n        },\n        {\n            id: 5,\n            pathname: '/user/analysis',\n            render: () => (\n                <User>\n                    <Analysis />\n                </User>\n            )\n        },\n        {\n            id: 6,\n            pathname: '/admin/analysis',\n            render: () => (\n                <Admin>\n                    <AdminAnalysis />\n                </Admin>\n            )\n        },\n        {\n            id: 99,\n            pathname: '*',\n            render: () => <Redirect to=\"/\" />\n        }\n    ]\n    return (\n        <AppContainer>\n            <Loader />\n            <Switch>\n                {routes.map(({ id, pathname, render }) => (\n                    <Route key={id} path={pathname} render={render} exact />\n                ))}\n            </Switch>\n        </AppContainer>\n    )\n}\n\nexport default App\n","const theme = {\n    primaryColor: '#ffff00',\n    firstBreakpoint: '1200px',\n    secondBreakpoint: '1000px',\n    additionalBreakpoint: '900px',\n    thirdBreakpoint: '750px',\n    fourthBreakpoint: '500px'\n}\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nimport 'assets/styles/index.scss'\n\nimport App from 'components/App'\n\nimport Loader from 'components/Shared/Loader/Loader'\n\nimport theme from 'assets/styles/theme'\n\nimport { store, persistor } from 'redux/store'\n\nimport utils from 'utils'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={utils.history}>\n            <Provider store={store}>\n                <PersistGate loading={<Loader />} persistor={persistor}>\n                    <ThemeProvider theme={theme}>\n                        <App />\n                    </ThemeProvider>\n                </PersistGate>\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorkerRegistration.register({\n    onUpdate: async registration => {\n        await registration.unregister()\n        window.location.reload()\n    }\n})\n"],"sourceRoot":""}